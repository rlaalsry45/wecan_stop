<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="statistics">
	<typeAlias alias="ZStatisticsMngVo" type="com.z5.zcms.admsys.statisticsmng.domain.ZStatisticsMngVo"/>
	<resultMap id="ZStatisticsMngVo" class="com.z5.zcms.admsys.statisticsmng.domain.ZStatisticsMngVo"/>
	
	<select id="statisticsDAO.getMonthCounsel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.regMonth WHEN '01' THEN wc.counselCnt END), 0) counselCnt01
			     , IFNULL(SUM(CASE wc.regMonth WHEN '02' THEN wc.counselCnt END), 0) counselCnt02
			     , IFNULL(SUM(CASE wc.regMonth WHEN '03' THEN wc.counselCnt END), 0) counselCnt03
			     , IFNULL(SUM(CASE wc.regMonth WHEN '04' THEN wc.counselCnt END), 0) counselCnt04
			     , IFNULL(SUM(CASE wc.regMonth WHEN '05' THEN wc.counselCnt END), 0) counselCnt05
			     , IFNULL(SUM(CASE wc.regMonth WHEN '06' THEN wc.counselCnt END), 0) counselCnt06
			     , IFNULL(SUM(CASE wc.regMonth WHEN '07' THEN wc.counselCnt END), 0) counselCnt07
			     , IFNULL(SUM(CASE wc.regMonth WHEN '08' THEN wc.counselCnt END), 0) counselCnt08
			     , IFNULL(SUM(CASE wc.regMonth WHEN '09' THEN wc.counselCnt END), 0) counselCnt09
			     , IFNULL(SUM(CASE wc.regMonth WHEN '10' THEN wc.counselCnt END), 0) counselCnt10
			     , IFNULL(SUM(CASE wc.regMonth WHEN '11' THEN wc.counselCnt END), 0) counselCnt11
			     , IFNULL(SUM(CASE wc.regMonth WHEN '12' THEN wc.counselCnt END), 0) counselCnt12
			  FROM (
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%m') regMonth,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(NOW(), '%Y')
	           	 GROUP BY regMonth
	           	 ) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getMonthAction" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.regMonth WHEN '01' THEN wc.actionCnt END), 0) actionCnt01
			     , IFNULL(SUM(CASE wc.regMonth WHEN '02' THEN wc.actionCnt END), 0) actionCnt02
			     , IFNULL(SUM(CASE wc.regMonth WHEN '03' THEN wc.actionCnt END), 0) actionCnt03
			     , IFNULL(SUM(CASE wc.regMonth WHEN '04' THEN wc.actionCnt END), 0) actionCnt04
			     , IFNULL(SUM(CASE wc.regMonth WHEN '05' THEN wc.actionCnt END), 0) actionCnt05
			     , IFNULL(SUM(CASE wc.regMonth WHEN '06' THEN wc.actionCnt END), 0) actionCnt06
			     , IFNULL(SUM(CASE wc.regMonth WHEN '07' THEN wc.actionCnt END), 0) actionCnt07
			     , IFNULL(SUM(CASE wc.regMonth WHEN '08' THEN wc.actionCnt END), 0) actionCnt08
			     , IFNULL(SUM(CASE wc.regMonth WHEN '09' THEN wc.actionCnt END), 0) actionCnt09
			     , IFNULL(SUM(CASE wc.regMonth WHEN '10' THEN wc.actionCnt END), 0) actionCnt10
			     , IFNULL(SUM(CASE wc.regMonth WHEN '11' THEN wc.actionCnt END), 0) actionCnt11
			     , IFNULL(SUM(CASE wc.regMonth WHEN '12' THEN wc.actionCnt END), 0) actionCnt12
			  FROM (
	            SELECT 
	            	   DATE_FORMAT(create_date, '%m') regMonth,
	            	   COUNT(*) actionCnt
				  FROM w_consulting_action_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(create_date, '%Y') = DATE_FORMAT(NOW(), '%Y')
	           	 GROUP BY regMonth
	           	 ) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getYearCounsel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.regYear WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 YEAR),'%Y') THEN wc.counselCnt END), 0) counselCnt01
			     , IFNULL(SUM(CASE wc.regYear WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 YEAR),'%Y') THEN wc.counselCnt END), 0) counselCnt02
			     , IFNULL(SUM(CASE wc.regYear WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 YEAR),'%Y') THEN wc.counselCnt END), 0) counselCnt03
			     , IFNULL(SUM(CASE wc.regYear WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 YEAR),'%Y') THEN wc.counselCnt END), 0) counselCnt04
			     , IFNULL(SUM(CASE wc.regYear WHEN DATE_FORMAT(NOW(),'%Y') THEN wc.counselCnt END), 0) counselCnt05
			  FROM (
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y') regYear,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	           	 WHERE delete_yn = 'N'
	           	 GROUP BY regYear
	           	 ) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getClientVictimRelType" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.client_victim_rel_type WHEN 'me' THEN wc.counselCnt END), 0) counselCnt01
			     , IFNULL(SUM(CASE wc.client_victim_rel_type WHEN 'agent' THEN wc.counselCnt END), 0) counselCnt02
			     , IFNULL(SUM(CASE wc.client_victim_rel_type WHEN 'relmanager' THEN wc.counselCnt END), 0) counselCnt03
			     , IFNULL(SUM(CASE wc.client_victim_rel_type WHEN 'doer' THEN wc.counselCnt END), 0) counselCnt04
			     , IFNULL(SUM(CASE wc.client_victim_rel_type WHEN 'etc' THEN wc.counselCnt END), 0) counselCnt05
			  FROM (
	            SELECT 
	            	   client_victim_rel_type,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
				 WHERE delete_yn = 'N'
	           	 GROUP BY client_victim_rel_type	
	           	 ) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getActionTypeServiceRel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.counselCnt1), 0) counselCnt01
	 			, IFNULL(SUM(wc.counselCnt2), 0) counselCnt02
				, IFNULL(SUM(wc.counselCnt3), 0) counselCnt03		     
			FROM (
				SELECT count(*) counselCnt1,
						0 counselCnt2,
						0 counselCnt3
  				FROM w_consulting_history_master
  			   WHERE delete_yn = 'N'
  				 AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						count(*) counselCnt2,
						0 counselCnt3
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N'
				  AND response_type_service_rel_law = 'Y'			  
				UNION
				SELECT 0 counselCnt1,
						0 counselCnt2,
						count(*) counselCnt3
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N'
				  AND response_type_service_rel_medical = 'Y'
  				)wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getYearActionTypeServiceRel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.counselCnt1), 0) counselCnt01
        		,IFNULL(SUM(wc.counselCnt2), 0) counselCnt02
        		,IFNULL(SUM(wc.counselCnt3), 0) counselCnt03
        		,IFNULL(SUM(wc.counselCnt4), 0) counselCnt04
        		,IFNULL(SUM(wc.counselCnt5), 0) counselCnt05
        		,IFNULL(SUM(wc.counselCnt6), 0) counselCnt06
        		,IFNULL(SUM(wc.counselCnt7), 0) counselCnt07
        		,IFNULL(SUM(wc.counselCnt8), 0) counselCnt08
        		,IFNULL(SUM(wc.counselCnt9), 0) counselCnt09
        		,IFNULL(SUM(wc.counselCnt10), 0) counselCnt10
        		,IFNULL(SUM(wc.counselCnt11), 0) counselCnt11
        		,IFNULL(SUM(wc.counselCnt12), 0) counselCnt12
        		,IFNULL(SUM(wc.counselCnt13), 0) counselCnt13
        		,IFNULL(SUM(wc.counselCnt14), 0) counselCnt14
        		,IFNULL(SUM(wc.counselCnt15), 0) counselCnt15				     
			FROM (
				SELECT count(*) counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 YEAR),'%Y') 
  				  AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						count(*) counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 YEAR),'%Y') 
  				  AND response_type_service_rel_law = 'Y'	  
				UNION
				SELECT  0 counselCnt1,
						0 counselCnt2,
						count(*) counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 YEAR),'%Y') 
  				  AND response_type_service_rel_medical = 'Y'
  				  
  				UNION
  				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						count(*) counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N'
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 YEAR),'%Y')
  				  AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						count(*) counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N'
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 YEAR),'%Y')
  				  AND response_type_service_rel_law = 'Y'
				UNION
				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						count(*) counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 YEAR),'%Y')
  				  AND response_type_service_rel_medical = 'Y'
  			UNION
  				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						count(*) counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 YEAR),'%Y') 
  				  AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						count(*) counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 YEAR),'%Y')
  				  AND response_type_service_rel_law = 'Y'	  
				UNION
				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						count(*) counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 YEAR),'%Y')
  				  AND response_type_service_rel_medical = 'Y'
  				UNION
  				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						count(*) counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 YEAR),'%Y') 
  				  AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						count(*) counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 YEAR),'%Y')
  				  AND response_type_service_rel_law = 'Y'	  
				UNION
				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						count(*) counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 YEAR),'%Y') 
  				  AND response_type_service_rel_medical = 'Y'
  				UNION
  				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						count(*) counselCnt13,
						0 counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(NOW(),'%Y')
  				  AND response_type_service_rel_con = 'Y'
  				UNION
				SELECT 0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						count(*) counselCnt14,
						0 counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(NOW(),'%Y') 
  				  AND response_type_service_rel_law = 'Y'	  
				UNION
				SELECT  0 counselCnt1,
						0 counselCnt2,
						0 counselCnt3,
						0 counselCnt4,
						0 counselCnt5,
						0 counselCnt6,
						0 counselCnt7,
						0 counselCnt8,
						0 counselCnt9,
						0 counselCnt10,
						0 counselCnt11,
						0 counselCnt12,
						0 counselCnt13,
						0 counselCnt14,
						count(*) counselCnt15
  				FROM w_consulting_history_master
  				WHERE delete_yn = 'N' 
				  AND DATE_FORMAT(consulting_start_date, '%Y') = DATE_FORMAT(NOW(),'%Y')
  				  AND response_type_service_rel_medical = 'Y'
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getActionCode" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.actionCode WHEN 'A' THEN wc.consultingCnt END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.actionCode WHEN 'B' then wc.consultingCnt END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.actionCode WHEN 'C' then wc.consultingCnt END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.actionCode WHEN 'D' then wc.consultingCnt END), 0) consultingCnt04	     
			FROM (
				SELECT 
						substr(wcam1.consulting_action_no,6,1 )  actionCode,
						count(*) consultingCnt	
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				group by actionCode
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getStep8ActionCode" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
       		SELECT IFNULL(SUM(CASE wc.actionCode WHEN 'A' THEN wc.consultingCnt END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.actionCode WHEN 'B' then wc.consultingCnt END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.actionCode WHEN 'C' then wc.consultingCnt END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.actionCode WHEN 'D' then wc.consultingCnt END), 0) consultingCnt04	     
			FROM (
				SELECT 
						substr(wcam1.consulting_action_no,6,1 )  actionCode,
						count(*) consultingCnt	
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND wcam2.step_status = 8
  				group by actionCode
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getOrgType" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.org_type WHEN 'gov' THEN wc.consultingCnt1 END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt1 END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' then wc.consultingCnt2 END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt2 END), 0) consultingCnt04
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' THEN wc.consultingCnt3 END), 0) consultingCnt05		
	 			, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt3 END), 0) consultingCnt06
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' then wc.consultingCnt4 END), 0) consultingCnt07
				, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt4 END), 0) consultingCnt08
			FROM (
				SELECT 
						wcam2.org_type,
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'A' 
  				GROUP BY org_type
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'B' 
  				GROUP BY org_type
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'C'
  				GROUP BY org_type
  				  UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'D' 
  				GROUP BY org_type
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getStep8OrgType" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.org_type WHEN 'gov' THEN wc.consultingCnt1 END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt1 END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' then wc.consultingCnt2 END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt2 END), 0) consultingCnt04
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' THEN wc.consultingCnt3 END), 0) consultingCnt05		
	 			, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt3 END), 0) consultingCnt06
				, IFNULL(SUM(CASE wc.org_type WHEN 'gov' then wc.consultingCnt4 END), 0) consultingCnt07
				, IFNULL(SUM(CASE wc.org_type WHEN 'priv' then wc.consultingCnt4 END), 0) consultingCnt08
			FROM (
				SELECT 
						wcam2.org_type,
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'A'
  				 AND wcam2.step_status = 8 
  				GROUP BY org_type
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'B'
  				 AND wcam2.step_status = 8 
  				GROUP BY org_type
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'C'
  				 AND wcam2.step_status = 8
  				GROUP BY org_type
  				  UNION 
  				 SELECT 
  				 		wcam2.org_type,
						0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'D' 
  				 AND wcam2.step_status = 8
  				GROUP BY org_type
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getOrgTypeGovDetail" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt1 END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt1 END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt1 END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt1 END), 0) consultingCnt04
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt2 END), 0) consultingCnt05		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt2 END), 0) consultingCnt06
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt2 END), 0) consultingCnt07
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt2 END), 0) consultingCnt08
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt3 END), 0) consultingCnt09		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt3 END), 0) consultingCnt10
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt3 END), 0) consultingCnt11
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt3 END), 0) consultingCnt12
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt4 END), 0) consultingCnt13		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt4 END), 0) consultingCnt14
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt4 END), 0) consultingCnt15
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt4 END), 0) consultingCnt16	
			FROM (
				SELECT 
						wcam2.org_type_gov_detail,
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'A' 
  				GROUP BY org_type_gov_detail
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'B' 
  				GROUP BY org_type_gov_detail
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'C'
  				GROUP BY org_type_gov_detail
  				  UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'D' 
  				GROUP BY org_type_gov_detail
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getStep8OrgTypeGovDetail" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt1 END), 0) consultingCnt01		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt1 END), 0) consultingCnt02
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt1 END), 0) consultingCnt03
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt1 END), 0) consultingCnt04
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt2 END), 0) consultingCnt05		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt2 END), 0) consultingCnt06
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt2 END), 0) consultingCnt07
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt2 END), 0) consultingCnt08
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt3 END), 0) consultingCnt09		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt3 END), 0) consultingCnt10
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt3 END), 0) consultingCnt11
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt3 END), 0) consultingCnt12
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'national' THEN wc.consultingCnt4 END), 0) consultingCnt13		
	 			, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'local' then wc.consultingCnt4 END), 0) consultingCnt14
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'public' then wc.consultingCnt4 END), 0) consultingCnt15
				, IFNULL(SUM(CASE wc.org_type_gov_detail WHEN 'school' then wc.consultingCnt4 END), 0) consultingCnt16	
			FROM (
				SELECT 
						wcam2.org_type_gov_detail,
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'A'
  				 AND wcam2.step_status = 8
  				GROUP BY org_type_gov_detail
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'B'
  				 AND wcam2.step_status = 8
  				GROUP BY org_type_gov_detail
  				 UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'C'
  				 AND wcam2.step_status = 8
  				GROUP BY org_type_gov_detail
  				  UNION 
  				 SELECT 
  				 		wcam2.org_type_gov_detail,
						0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				 AND wcam1.delete_yn = 'N'
  				 AND substr(wcam1.consulting_action_no,6,1 ) = 'D'
  				 AND wcam2.step_status = 8
  				GROUP BY org_type_gov_detail
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getHamType" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1+wc.consultingCnt2), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt3), 0) consultingCnt02
				, IFNULL(SUM(wc.consultingCnt4), 0) consultingCnt03
				, IFNULL(SUM(wc.consultingCnt5), 0) consultingCnt04
				, IFNULL(SUM(wc.consultingCnt6+wc.consultingCnt7), 0) consultingCnt05		
	 			, IFNULL(SUM(wc.consultingCnt8), 0) consultingCnt06
				, IFNULL(SUM(wc.consultingCnt9), 0) consultingCnt07
				, IFNULL(SUM(wc.consultingCnt10), 0) consultingCnt08	
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'gov'
  				  AND wcam2.harm_type_verbals = 'Y'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'gov'
  				  AND wcam2.harm_type_body = 'Y'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'gov'
  				  AND wcam2.harm_type_visual = 'Y'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'gov'
  				  AND wcam2.harm_type_second = 'Y'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						count(*) consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'gov'
  				  AND wcam2.harm_type_etc = 'Y'
  				 UNION
  				 SELECT 
						0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						count(*) consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'priv'
  				  AND wcam2.harm_type_verbals = 'Y'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						count(*) consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'priv'
  				  AND wcam2.harm_type_body = 'Y'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						count(*) consultingCnt8,
						0 consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'priv'
  				  AND wcam2.harm_type_visual = 'Y'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						count(*) consultingCnt9,
						0 consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'priv'
  				  AND wcam2.harm_type_second = 'Y'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6,
						0 consultingCnt7,
						0 consultingCnt8,
						0 consultingCnt9,
						count(*) consultingCnt10
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND wcam2.org_type = 'priv'
  				  AND wcam2.harm_type_etc = 'Y'   
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getConsultingType" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt2), 0) consultingCnt02
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND TRIM(wcam1.client_name) = ''
  				  AND wcam2.org_type = 'gov'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2
  				FROM w_consulting_action_master wcam1, w_consulting_application_master wcam2
  				WHERE wcam1.consulting_action_no  = wcam2.consulting_application_no
  				  AND wcam1.delete_yn = 'N'
  				  AND TRIM(wcam1.client_name) = ''
  				  AND wcam2.org_type = 'priv'   
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getWeekActionTypeCont" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt2), 0) consultingCnt02
	 			, IFNULL(SUM(wc.consultingCnt3), 0) consultingCnt03
	 			, IFNULL(SUM(wc.consultingCnt4), 0) consultingCnt04
	 			, IFNULL(SUM(wc.consultingCnt5), 0) consultingCnt05
	 			, IFNULL(SUM(wc.consultingCnt6), 0) consultingCnt06
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'coun'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'act'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'con'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'move'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						count(*) consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'cancel'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						count(*) consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 WEEK),'%Y%m%d') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'giveup'  
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getYearActionTypeCont" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt2), 0) consultingCnt02
	 			, IFNULL(SUM(wc.consultingCnt3), 0) consultingCnt03
	 			, IFNULL(SUM(wc.consultingCnt4), 0) consultingCnt04
	 			, IFNULL(SUM(wc.consultingCnt5), 0) consultingCnt05
	 			, IFNULL(SUM(wc.consultingCnt6), 0) consultingCnt06
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'coun'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'act'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'con'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4,
						0 consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'move'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						count(*) consultingCnt5,
						0 consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'cancel'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4,
						0 consultingCnt5,
						count(*) consultingCnt6
  				FROM w_consulting_action_master
  				WHERE DATE_FORMAT(create_date, '%Y%m%d') BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y'),'0101') AND DATE_FORMAT(NOW(),'%Y%m%d')
  				  AND delete_yn = 'N'
  				  AND action_type_cont = 'giveup'  
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getMasterActionTypeServiceRel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt2), 0) consultingCnt02
	 			, IFNULL(SUM(wc.consultingCnt3), 0) consultingCnt03
	 			, IFNULL(SUM(wc.consultingCnt4), 0) consultingCnt04
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_consulting = 'Y'
  				  AND delete_yn = 'N'
  				  AND SUBSTR(consulting_action_no,6,1) = 'A'
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_medic = 'Y'
  				  AND delete_yn = 'N'
  				  AND SUBSTR(consulting_action_no,6,1) = 'A'
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_law_min = 'Y'
  				  AND delete_yn = 'N'
  				  AND SUBSTR(consulting_action_no,6,1) = 'A'
  				 UNION 
  				SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_etc = 'Y'
  				  AND delete_yn = 'N'
  				  AND SUBSTR(consulting_action_no,6,1) = 'A'
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getHistoryActionTypeServiceRel" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
        	SELECT IFNULL(SUM(wc.consultingCnt1), 0) consultingCnt01		
	 			, IFNULL(SUM(wc.consultingCnt2), 0) consultingCnt02
	 			, IFNULL(SUM(wc.consultingCnt3), 0) consultingCnt03
	 			, IFNULL(SUM(wc.consultingCnt4), 0) consultingCnt04
			FROM (
				SELECT 
						count(*) consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_consulting = 'Y'
  				  AND delete_yn = 'N'
  				  AND TRIM(client_name) = ''
  				 UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						count(*) consultingCnt2,
						0 consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_medic = 'Y'
  				  AND delete_yn = 'N'
  				  AND TRIM(client_name) = ''
  				  UNION 
  				 SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						count(*) consultingCnt3,
						0 consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_law_min = 'Y'
  				  AND delete_yn = 'N'
  				  AND TRIM(client_name) = ''
  				 UNION 
  				SELECT 
  				 		0 consultingCnt1,
						0 consultingCnt2,
						0 consultingCnt3,
						count(*) consultingCnt4
  				FROM w_consulting_action_master
  				WHERE action_type_servie_rel_etc = 'Y'
  				  AND delete_yn = 'N'
  				  AND TRIM(client_name) = ''
  				) wc
	      ]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">  
	      <![CDATA[
        	SELECT IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_1
			     , IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_2
			     , IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_3
			     , IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_4
			     , IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_5
			     , IFNULL(SUM(CASE zswo.ASKNO_1 WHEN '6' THEN zswo.satisfactionCnt END), 0) satisfactionCnt01_6
			  	 , IFNULL(SUM(CASE zswo.ASKNO_2 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt02_1
			     , IFNULL(SUM(CASE zswo.ASKNO_2 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt02_2
			     , IFNULL(SUM(CASE zswo.ASKNO_2 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt02_3
			     , IFNULL(SUM(CASE zswo.ASKNO_2 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt02_4
			     , IFNULL(SUM(CASE zswo.ASKNO_2 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt02_5
			     , IFNULL(SUM(CASE zswo.ASKNO_3 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt03_1
			     , IFNULL(SUM(CASE zswo.ASKNO_3 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt03_2
			     , IFNULL(SUM(CASE zswo.ASKNO_3 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt03_3
			     , IFNULL(SUM(CASE zswo.ASKNO_3 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt03_4
			     , IFNULL(SUM(CASE zswo.ASKNO_3 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt03_5
			     , IFNULL(SUM(CASE zswo.ASKNO_4 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt04_1
			     , IFNULL(SUM(CASE zswo.ASKNO_4 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt04_2
			     , IFNULL(SUM(CASE zswo.ASKNO_4 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt04_3
			     , IFNULL(SUM(CASE zswo.ASKNO_4 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt04_4
			     , IFNULL(SUM(CASE zswo.ASKNO_4 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt04_5
			  	 , IFNULL(SUM(CASE zswo.ASKNO_5 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt05_1
			     , IFNULL(SUM(CASE zswo.ASKNO_5 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt05_2
			     , IFNULL(SUM(CASE zswo.ASKNO_5 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt05_3
			     , IFNULL(SUM(CASE zswo.ASKNO_5 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt05_4
			     , IFNULL(SUM(CASE zswo.ASKNO_5 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt05_5
			  	 , IFNULL(SUM(CASE zswo.ASKNO_6 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt06_1
			     , IFNULL(SUM(CASE zswo.ASKNO_6 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt06_2
			     , IFNULL(SUM(CASE zswo.ASKNO_6 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt06_3
			     , IFNULL(SUM(CASE zswo.ASKNO_6 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt06_4
			     , IFNULL(SUM(CASE zswo.ASKNO_6 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt06_5
			     , IFNULL(SUM(CASE zswo.ASKNO_7 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt07_1
			     , IFNULL(SUM(CASE zswo.ASKNO_7 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt07_2
			     , IFNULL(SUM(CASE zswo.ASKNO_7 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt07_3
			     , IFNULL(SUM(CASE zswo.ASKNO_7 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt07_4
			     , IFNULL(SUM(CASE zswo.ASKNO_7 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt07_5
			  	 , IFNULL(SUM(CASE zswo.ASKNO_8 WHEN '1' THEN zswo.satisfactionCnt END), 0) satisfactionCnt08_1
			     , IFNULL(SUM(CASE zswo.ASKNO_8 WHEN '2' THEN zswo.satisfactionCnt END), 0) satisfactionCnt08_2
			     , IFNULL(SUM(CASE zswo.ASKNO_8 WHEN '3' THEN zswo.satisfactionCnt END), 0) satisfactionCnt08_3
			     , IFNULL(SUM(CASE zswo.ASKNO_8 WHEN '4' THEN zswo.satisfactionCnt END), 0) satisfactionCnt08_4
			     , IFNULL(SUM(CASE zswo.ASKNO_8 WHEN '5' THEN zswo.satisfactionCnt END), 0) satisfactionCnt08_5
			     
			  FROM (
	            SELECT 
	            	   zs.ASKNO_1,
	            	   zs.ASKNO_2,
	            	   zs.ASKNO_3,
	            	   zs.ASKNO_4,
	            	   zs.ASKNO_5,
	            	   zs.ASKNO_6,
	            	   zs.ASKNO_7,
	            	   zs.ASKNO_8,
	            	   COUNT(*) satisfactionCnt
				  FROM zsatisfactionresult zs,
				  	   w_organization wo
				 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
           		<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
				<![CDATA[
	           	 GROUP BY zs.ASKNO_1, zs.ASKNO_2, zs.ASKNO_3, zs.ASKNO_4, zs.ASKNO_5, zs.ASKNO_6, zs.ASKNO_7, zs.ASKNO_8
	             ) zswo
	      		]]>
	</select>

	<select id="statisticsDAO.getSatisfaction1OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	     <![CDATA[
	        SELECT 
	               zs.ASKNO_1_OPINION AS askno1opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_1_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_1_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction2OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_2_OPINION AS askno2opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_2_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_2_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction3OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_3_OPINION AS askno3opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_3_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_3_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction4OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_4_OPINION AS askno4opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_4_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_4_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction5OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_5_OPINION AS askno5opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_5_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_5_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction6OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_6_OPINION AS askno6opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_6_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_6_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction7OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_7_OPINION AS askno7opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_7_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_7_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction8OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_8_OPINION AS askno8opinion
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_8_OPINION) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_8_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSatisfaction9List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_9 AS askno9
			  FROM zsatisfactionresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			 	   AND TRIM(zs.ASKNO_9) != ''
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="satisfaction1">
					zs.ASKNO_1 = #satisfaction1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_9
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">   
        <![CDATA[
        	SELECT IFNULL(SUM(CASE zswo.askno0A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt00A_1
			     , IFNULL(SUM(CASE zswo.askno0A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt00A_2
			  	 , IFNULL(SUM(CASE zswo.askno0B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt00B_1
			     , IFNULL(SUM(CASE zswo.askno0B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt00B_2
			  	 , IFNULL(SUM(CASE zswo.askno1_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt01_1A_1
			     , IFNULL(SUM(CASE zswo.askno1_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt01_1A_2
			     , IFNULL(SUM(CASE zswo.askno1_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt01_1A_3
			     , IFNULL(SUM(CASE zswo.askno1_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt01_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno1_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt01_1B_1
			     , IFNULL(SUM(CASE zswo.askno1_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt01_1B_2
			     , IFNULL(SUM(CASE zswo.askno1_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt01_1B_3
			     , IFNULL(SUM(CASE zswo.askno1_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt01_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno1_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt01_2A_1
			     , IFNULL(SUM(CASE zswo.askno1_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt01_2A_2
			     , IFNULL(SUM(CASE zswo.askno1_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt01_2A_3
			     , IFNULL(SUM(CASE zswo.askno1_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt01_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno1_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt01_2B_1
			     , IFNULL(SUM(CASE zswo.askno1_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt01_2B_2
			     , IFNULL(SUM(CASE zswo.askno1_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt01_2B_3
			     , IFNULL(SUM(CASE zswo.askno1_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt01_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno1_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt01_3A_1
			     , IFNULL(SUM(CASE zswo.askno1_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt01_3A_2
			     , IFNULL(SUM(CASE zswo.askno1_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt01_3A_3
			     , IFNULL(SUM(CASE zswo.askno1_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt01_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno1_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt01_3B_1
			     , IFNULL(SUM(CASE zswo.askno1_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt01_3B_2
			     , IFNULL(SUM(CASE zswo.askno1_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt01_3B_3
			     , IFNULL(SUM(CASE zswo.askno1_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt01_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno1_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt01_4A_1
			     , IFNULL(SUM(CASE zswo.askno1_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt01_4A_2
			     , IFNULL(SUM(CASE zswo.askno1_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt01_4A_3
			     , IFNULL(SUM(CASE zswo.askno1_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt01_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno1_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt01_4B_1
			     , IFNULL(SUM(CASE zswo.askno1_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt01_4B_2
			     , IFNULL(SUM(CASE zswo.askno1_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt01_4B_3
			     , IFNULL(SUM(CASE zswo.askno1_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt01_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno2_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt02_1A_1
			     , IFNULL(SUM(CASE zswo.askno2_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt02_1A_2
			     , IFNULL(SUM(CASE zswo.askno2_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt02_1A_3
			     , IFNULL(SUM(CASE zswo.askno2_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt02_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno2_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt02_1B_1
			     , IFNULL(SUM(CASE zswo.askno2_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt02_1B_2
			     , IFNULL(SUM(CASE zswo.askno2_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt02_1B_3
			     , IFNULL(SUM(CASE zswo.askno2_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt02_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno2_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt02_2A_1
			     , IFNULL(SUM(CASE zswo.askno2_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt02_2A_2
			     , IFNULL(SUM(CASE zswo.askno2_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt02_2A_3
			     , IFNULL(SUM(CASE zswo.askno2_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt02_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno2_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt02_2B_1
			     , IFNULL(SUM(CASE zswo.askno2_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt02_2B_2
			     , IFNULL(SUM(CASE zswo.askno2_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt02_2B_3
			     , IFNULL(SUM(CASE zswo.askno2_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt02_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno2_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt02_3A_1
			     , IFNULL(SUM(CASE zswo.askno2_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt02_3A_2
			     , IFNULL(SUM(CASE zswo.askno2_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt02_3A_3
			     , IFNULL(SUM(CASE zswo.askno2_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt02_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno2_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt02_3B_1
			     , IFNULL(SUM(CASE zswo.askno2_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt02_3B_2
			     , IFNULL(SUM(CASE zswo.askno2_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt02_3B_3
			     , IFNULL(SUM(CASE zswo.askno2_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt02_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno2_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt02_4A_1
			     , IFNULL(SUM(CASE zswo.askno2_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt02_4A_2
			     , IFNULL(SUM(CASE zswo.askno2_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt02_4A_3
			     , IFNULL(SUM(CASE zswo.askno2_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt02_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno2_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt02_4B_1
			     , IFNULL(SUM(CASE zswo.askno2_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt02_4B_2
			     , IFNULL(SUM(CASE zswo.askno2_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt02_4B_3
			     , IFNULL(SUM(CASE zswo.askno2_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt02_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno3_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt03_1A_1
			     , IFNULL(SUM(CASE zswo.askno3_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt03_1A_2
			     , IFNULL(SUM(CASE zswo.askno3_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt03_1A_3
			     , IFNULL(SUM(CASE zswo.askno3_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt03_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno3_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt03_1B_1
			     , IFNULL(SUM(CASE zswo.askno3_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt03_1B_2
			     , IFNULL(SUM(CASE zswo.askno3_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt03_1B_3
			     , IFNULL(SUM(CASE zswo.askno3_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt03_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno3_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt03_2A_1
			     , IFNULL(SUM(CASE zswo.askno3_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt03_2A_2
			     , IFNULL(SUM(CASE zswo.askno3_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt03_2A_3
			     , IFNULL(SUM(CASE zswo.askno3_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt03_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno3_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt03_2B_1
			     , IFNULL(SUM(CASE zswo.askno3_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt03_2B_2
			     , IFNULL(SUM(CASE zswo.askno3_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt03_2B_3
			     , IFNULL(SUM(CASE zswo.askno3_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt03_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno3_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt03_3A_1
			     , IFNULL(SUM(CASE zswo.askno3_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt03_3A_2
			     , IFNULL(SUM(CASE zswo.askno3_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt03_3A_3
			     , IFNULL(SUM(CASE zswo.askno3_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt03_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno3_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt03_3B_1
			     , IFNULL(SUM(CASE zswo.askno3_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt03_3B_2
			     , IFNULL(SUM(CASE zswo.askno3_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt03_3B_3
			     , IFNULL(SUM(CASE zswo.askno3_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt03_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno3_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt03_4A_1
			     , IFNULL(SUM(CASE zswo.askno3_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt03_4A_2
			     , IFNULL(SUM(CASE zswo.askno3_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt03_4A_3
			     , IFNULL(SUM(CASE zswo.askno3_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt03_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno3_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt03_4B_1
			     , IFNULL(SUM(CASE zswo.askno3_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt03_4B_2
			     , IFNULL(SUM(CASE zswo.askno3_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt03_4B_3
			     , IFNULL(SUM(CASE zswo.askno3_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt03_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno3_5A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt03_5A_1
			     , IFNULL(SUM(CASE zswo.askno3_5A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt03_5A_2
			     , IFNULL(SUM(CASE zswo.askno3_5A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt03_5A_3
			     , IFNULL(SUM(CASE zswo.askno3_5A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt03_5A_4
			  	 , IFNULL(SUM(CASE zswo.askno3_5B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt03_5B_1
			     , IFNULL(SUM(CASE zswo.askno3_5B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt03_5B_2
			     , IFNULL(SUM(CASE zswo.askno3_5B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt03_5B_3
			     , IFNULL(SUM(CASE zswo.askno3_5B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt03_5B_4
			  	 , IFNULL(SUM(CASE zswo.askno4_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt04_1A_1
			     , IFNULL(SUM(CASE zswo.askno4_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt04_1A_2
			     , IFNULL(SUM(CASE zswo.askno4_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt04_1A_3
			     , IFNULL(SUM(CASE zswo.askno4_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt04_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno4_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt04_1B_1
			     , IFNULL(SUM(CASE zswo.askno4_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt04_1B_2
			     , IFNULL(SUM(CASE zswo.askno4_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt04_1B_3
			     , IFNULL(SUM(CASE zswo.askno4_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt04_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno4_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt04_2A_1
			     , IFNULL(SUM(CASE zswo.askno4_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt04_2A_2
			     , IFNULL(SUM(CASE zswo.askno4_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt04_2A_3
			     , IFNULL(SUM(CASE zswo.askno4_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt04_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno4_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt04_2B_1
			     , IFNULL(SUM(CASE zswo.askno4_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt04_2B_2
			     , IFNULL(SUM(CASE zswo.askno4_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt04_2B_3
			     , IFNULL(SUM(CASE zswo.askno4_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt04_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno4_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt04_3A_1
			     , IFNULL(SUM(CASE zswo.askno4_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt04_3A_2
			     , IFNULL(SUM(CASE zswo.askno4_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt04_3A_3
			     , IFNULL(SUM(CASE zswo.askno4_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt04_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno4_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt04_3B_1
			     , IFNULL(SUM(CASE zswo.askno4_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt04_3B_2
			     , IFNULL(SUM(CASE zswo.askno4_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt04_3B_3
			     , IFNULL(SUM(CASE zswo.askno4_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt04_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno4_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt04_4A_1
			     , IFNULL(SUM(CASE zswo.askno4_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt04_4A_2
			     , IFNULL(SUM(CASE zswo.askno4_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt04_4A_3
			     , IFNULL(SUM(CASE zswo.askno4_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt04_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno4_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt04_4B_1
			     , IFNULL(SUM(CASE zswo.askno4_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt04_4B_2
			     , IFNULL(SUM(CASE zswo.askno4_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt04_4B_3
			     , IFNULL(SUM(CASE zswo.askno4_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt04_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno5_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt05_1A_1
			     , IFNULL(SUM(CASE zswo.askno5_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt05_1A_2
			     , IFNULL(SUM(CASE zswo.askno5_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt05_1A_3
			     , IFNULL(SUM(CASE zswo.askno5_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt05_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno5_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt05_1B_1
			     , IFNULL(SUM(CASE zswo.askno5_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt05_1B_2
			     , IFNULL(SUM(CASE zswo.askno5_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt05_1B_3
			     , IFNULL(SUM(CASE zswo.askno5_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt05_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno5_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt05_2A_1
			     , IFNULL(SUM(CASE zswo.askno5_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt05_2A_2
			     , IFNULL(SUM(CASE zswo.askno5_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt05_2A_3
			     , IFNULL(SUM(CASE zswo.askno5_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt05_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno5_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt05_2B_1
			     , IFNULL(SUM(CASE zswo.askno5_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt05_2B_2
			     , IFNULL(SUM(CASE zswo.askno5_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt05_2B_3
			     , IFNULL(SUM(CASE zswo.askno5_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt05_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno5_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt05_3A_1
			     , IFNULL(SUM(CASE zswo.askno5_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt05_3A_2
			     , IFNULL(SUM(CASE zswo.askno5_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt05_3A_3
			     , IFNULL(SUM(CASE zswo.askno5_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt05_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno5_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt05_3B_1
			     , IFNULL(SUM(CASE zswo.askno5_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt05_3B_2
			     , IFNULL(SUM(CASE zswo.askno5_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt05_3B_3
			     , IFNULL(SUM(CASE zswo.askno5_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt05_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno5_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt05_4A_1
			     , IFNULL(SUM(CASE zswo.askno5_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt05_4A_2
			     , IFNULL(SUM(CASE zswo.askno5_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt05_4A_3
			     , IFNULL(SUM(CASE zswo.askno5_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt05_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno5_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt05_4B_1
			     , IFNULL(SUM(CASE zswo.askno5_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt05_4B_2
			     , IFNULL(SUM(CASE zswo.askno5_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt05_4B_3
			     , IFNULL(SUM(CASE zswo.askno5_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt05_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno5_5A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt05_5A_1
			     , IFNULL(SUM(CASE zswo.askno5_5A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt05_5A_2
			     , IFNULL(SUM(CASE zswo.askno5_5A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt05_5A_3
			     , IFNULL(SUM(CASE zswo.askno5_5A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt05_5A_4
			  	 , IFNULL(SUM(CASE zswo.askno5_5B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt05_5B_1
			     , IFNULL(SUM(CASE zswo.askno5_5B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt05_5B_2
			     , IFNULL(SUM(CASE zswo.askno5_5B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt05_5B_3
			     , IFNULL(SUM(CASE zswo.askno5_5B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt05_5B_4
			  	 , IFNULL(SUM(CASE zswo.askno6_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt06_1A_1
			     , IFNULL(SUM(CASE zswo.askno6_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt06_1A_2
			     , IFNULL(SUM(CASE zswo.askno6_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt06_1A_3
			     , IFNULL(SUM(CASE zswo.askno6_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt06_1A_4
			  	 , IFNULL(SUM(CASE zswo.askno6_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt06_1B_1
			     , IFNULL(SUM(CASE zswo.askno6_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt06_1B_2
			     , IFNULL(SUM(CASE zswo.askno6_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt06_1B_3
			     , IFNULL(SUM(CASE zswo.askno6_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt06_1B_4
			  	 , IFNULL(SUM(CASE zswo.askno6_2A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt06_2A_1
			     , IFNULL(SUM(CASE zswo.askno6_2A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt06_2A_2
			     , IFNULL(SUM(CASE zswo.askno6_2A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt06_2A_3
			     , IFNULL(SUM(CASE zswo.askno6_2A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt06_2A_4
			  	 , IFNULL(SUM(CASE zswo.askno6_2B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt06_2B_1
			     , IFNULL(SUM(CASE zswo.askno6_2B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt06_2B_2
			     , IFNULL(SUM(CASE zswo.askno6_2B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt06_2B_3
			     , IFNULL(SUM(CASE zswo.askno6_2B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt06_2B_4
			  	 , IFNULL(SUM(CASE zswo.askno6_3A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt06_3A_1
			     , IFNULL(SUM(CASE zswo.askno6_3A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt06_3A_2
			     , IFNULL(SUM(CASE zswo.askno6_3A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt06_3A_3
			     , IFNULL(SUM(CASE zswo.askno6_3A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt06_3A_4
			  	 , IFNULL(SUM(CASE zswo.askno6_3B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt06_3B_1
			     , IFNULL(SUM(CASE zswo.askno6_3B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt06_3B_2
			     , IFNULL(SUM(CASE zswo.askno6_3B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt06_3B_3
			     , IFNULL(SUM(CASE zswo.askno6_3B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt06_3B_4
			  	 , IFNULL(SUM(CASE zswo.askno6_4A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt06_4A_1
			     , IFNULL(SUM(CASE zswo.askno6_4A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt06_4A_2
			     , IFNULL(SUM(CASE zswo.askno6_4A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt06_4A_3
			     , IFNULL(SUM(CASE zswo.askno6_4A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt06_4A_4
			  	 , IFNULL(SUM(CASE zswo.askno6_4B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt06_4B_1
			     , IFNULL(SUM(CASE zswo.askno6_4B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt06_4B_2
			     , IFNULL(SUM(CASE zswo.askno6_4B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt06_4B_3
			     , IFNULL(SUM(CASE zswo.askno6_4B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt06_4B_4
			  	 , IFNULL(SUM(CASE zswo.askno6_5A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt06_5A_1
			     , IFNULL(SUM(CASE zswo.askno6_5A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt06_5A_2
			     , IFNULL(SUM(CASE zswo.askno6_5A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt06_5A_3
			     , IFNULL(SUM(CASE zswo.askno6_5A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt06_5A_4
			  	 , IFNULL(SUM(CASE zswo.askno6_5B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt06_5B_1
			     , IFNULL(SUM(CASE zswo.askno6_5B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt06_5B_2
			     , IFNULL(SUM(CASE zswo.askno6_5B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt06_5B_3
			     , IFNULL(SUM(CASE zswo.askno6_5B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt06_5B_4
			  	 , IFNULL(SUM(CASE zswo.askno7_1A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_1A
			     , IFNULL(SUM(CASE zswo.askno7_2A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_2A
			     , IFNULL(SUM(CASE zswo.askno7_3A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_3A
			     , IFNULL(SUM(CASE zswo.askno7_4A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_4A
			     , IFNULL(SUM(CASE zswo.askno7_5A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_5A
			     , IFNULL(SUM(CASE zswo.askno7_6A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_6A
			     , IFNULL(SUM(CASE zswo.askno7_7A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_7A
			     , IFNULL(SUM(CASE zswo.askno7_8A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt07_8A
			     , IFNULL(SUM(CASE zswo.askno7_1B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_1B
			     , IFNULL(SUM(CASE zswo.askno7_2B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_2B
			     , IFNULL(SUM(CASE zswo.askno7_3B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_3B
			     , IFNULL(SUM(CASE zswo.askno7_4B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_4B
			     , IFNULL(SUM(CASE zswo.askno7_5B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_5B
			     , IFNULL(SUM(CASE zswo.askno7_6B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_6B
			     , IFNULL(SUM(CASE zswo.askno7_7B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_7B
			     , IFNULL(SUM(CASE zswo.askno7_8B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt07_8B
			  	 , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_1
			     , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_2
			     , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_3
			     , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_4
			     , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '5' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_5
			     , IFNULL(SUM(CASE zswo.askno7_1_1A WHEN '6' THEN zswo.surveyCntA END), 0) surveyCnt07_1_1A_6
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_1
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_2
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_3
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_4
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '5' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_5
			     , IFNULL(SUM(CASE zswo.askno7_1_1B WHEN '6' THEN zswo.surveyCntB END), 0) surveyCnt07_1_1B_6
			  	 , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_1
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_2
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_3
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_4
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '5' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_5
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '6' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_6
			     , IFNULL(SUM(CASE zswo.askno7_2_1A WHEN '7' THEN zswo.surveyCntA END), 0) surveyCnt07_2_1A_7
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_1
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_2
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_3
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_4
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '5' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_5
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '6' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_6
			     , IFNULL(SUM(CASE zswo.askno7_2_1B WHEN '7' THEN zswo.surveyCntB END), 0) surveyCnt07_2_1B_7
			  	 , IFNULL(SUM(CASE zswo.askno8A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt08A_1
			     , IFNULL(SUM(CASE zswo.askno8A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt08A_2
			     , IFNULL(SUM(CASE zswo.askno8A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt08A_3
			     , IFNULL(SUM(CASE zswo.askno8A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt08A_4
			     , IFNULL(SUM(CASE zswo.askno8A WHEN '5' THEN zswo.surveyCntA END), 0) surveyCnt08A_5
			     , IFNULL(SUM(CASE zswo.askno8B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt08B_1
			     , IFNULL(SUM(CASE zswo.askno8B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt08B_2
			     , IFNULL(SUM(CASE zswo.askno8B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt08B_3
			     , IFNULL(SUM(CASE zswo.askno8B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt08B_4
			     , IFNULL(SUM(CASE zswo.askno8B WHEN '5' THEN zswo.surveyCntB END), 0) surveyCnt08B_5
			  	 , IFNULL(SUM(CASE zswo.askno9A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt09A_1
			     , IFNULL(SUM(CASE zswo.askno9A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt09A_2
			     , IFNULL(SUM(CASE zswo.askno9A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt09A_3
			     , IFNULL(SUM(CASE zswo.askno9A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt09A_4
			  	 , IFNULL(SUM(CASE zswo.askno9A WHEN '5' THEN zswo.surveyCntA END), 0) surveyCnt09A_5
			  	 , IFNULL(SUM(CASE zswo.askno9A WHEN '6' THEN zswo.surveyCntA END), 0) surveyCnt09A_6
			  	 , IFNULL(SUM(CASE zswo.askno9B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt09B_1
			     , IFNULL(SUM(CASE zswo.askno9B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt09B_2
			     , IFNULL(SUM(CASE zswo.askno9B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt09B_3
			     , IFNULL(SUM(CASE zswo.askno9B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt09B_4
			  	 , IFNULL(SUM(CASE zswo.askno9B WHEN '5' THEN zswo.surveyCntB END), 0) surveyCnt09B_5
			  	 , IFNULL(SUM(CASE zswo.askno9B WHEN '6' THEN zswo.surveyCntB END), 0) surveyCnt09B_6
			  	 , IFNULL(SUM(CASE zswo.askno10_1A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_1A
			     , IFNULL(SUM(CASE zswo.askno10_2A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_2A
			     , IFNULL(SUM(CASE zswo.askno10_3A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_3A
			     , IFNULL(SUM(CASE zswo.askno10_4A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_4A
			     , IFNULL(SUM(CASE zswo.askno10_5A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_5A
			     , IFNULL(SUM(CASE zswo.askno10_6A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_6A
			     , IFNULL(SUM(CASE zswo.askno10_7A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_7A
			     , IFNULL(SUM(CASE zswo.askno10_8A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt10_8A
			     , IFNULL(SUM(CASE zswo.askno10_1B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_1B
			     , IFNULL(SUM(CASE zswo.askno10_2B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_2B
			     , IFNULL(SUM(CASE zswo.askno10_3B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_3B
			     , IFNULL(SUM(CASE zswo.askno10_4B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_4B
			     , IFNULL(SUM(CASE zswo.askno10_5B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_5B
			     , IFNULL(SUM(CASE zswo.askno10_6B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_6B
			     , IFNULL(SUM(CASE zswo.askno10_7B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_7B
			     , IFNULL(SUM(CASE zswo.askno10_8B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt10_8B
			  	 , IFNULL(SUM(CASE zswo.askno11_1A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_1A
			     , IFNULL(SUM(CASE zswo.askno11_2A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_2A
			     , IFNULL(SUM(CASE zswo.askno11_3A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_3A
			     , IFNULL(SUM(CASE zswo.askno11_4A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_4A
			     , IFNULL(SUM(CASE zswo.askno11_5A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_5A
			     , IFNULL(SUM(CASE zswo.askno11_6A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt11_6A
			     , IFNULL(SUM(CASE zswo.askno11_1B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_1B
			     , IFNULL(SUM(CASE zswo.askno11_2B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_2B
			     , IFNULL(SUM(CASE zswo.askno11_3B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_3B
			     , IFNULL(SUM(CASE zswo.askno11_4B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_4B
			     , IFNULL(SUM(CASE zswo.askno11_5B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_5B
			     , IFNULL(SUM(CASE zswo.askno11_6B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt11_6B
			  	 , IFNULL(SUM(CASE zswo.askno12_1A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt12_1A
			     , IFNULL(SUM(CASE zswo.askno12_2A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt12_2A
			     , IFNULL(SUM(CASE zswo.askno12_3A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt12_3A
			     , IFNULL(SUM(CASE zswo.askno12_4A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt12_4A
			     , IFNULL(SUM(CASE zswo.askno12_5A WHEN 'Y' THEN zswo.surveyCntA END), 0) surveyCnt12_5A
			     , IFNULL(SUM(CASE zswo.askno12_1B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt12_1B
			     , IFNULL(SUM(CASE zswo.askno12_2B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt12_2B
			     , IFNULL(SUM(CASE zswo.askno12_3B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt12_3B
			     , IFNULL(SUM(CASE zswo.askno12_4B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt12_4B
			     , IFNULL(SUM(CASE zswo.askno12_5B WHEN 'Y' THEN zswo.surveyCntB END), 0) surveyCnt12_5B
			  	 , IFNULL(SUM(CASE zswo.askno14A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt14A_1
			     , IFNULL(SUM(CASE zswo.askno14A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt14A_2
			     , IFNULL(SUM(CASE zswo.askno14B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt14B_1
			     , IFNULL(SUM(CASE zswo.askno14B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt14B_2
			     , IFNULL(SUM(CASE zswo.askno15A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt15A_1
			     , IFNULL(SUM(CASE zswo.askno15A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt15A_2
			     , IFNULL(SUM(CASE zswo.askno15A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt15A_3
			     , IFNULL(SUM(CASE zswo.askno15A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt15A_4
			     , IFNULL(SUM(CASE zswo.askno15B WHEN '1' THEN zswo.surveyCntB END), 0) surveyCnt15B_1
			     , IFNULL(SUM(CASE zswo.askno15B WHEN '2' THEN zswo.surveyCntB END), 0) surveyCnt15B_2
			     , IFNULL(SUM(CASE zswo.askno15B WHEN '3' THEN zswo.surveyCntB END), 0) surveyCnt15B_3
			     , IFNULL(SUM(CASE zswo.askno15B WHEN '4' THEN zswo.surveyCntB END), 0) surveyCnt15B_4
			     , IFNULL(SUM(CASE zswo.askno16A WHEN '1' THEN zswo.surveyCntA END), 0) surveyCnt16A_1
			     , IFNULL(SUM(CASE zswo.askno16A WHEN '2' THEN zswo.surveyCntA END), 0) surveyCnt16A_2
			     , IFNULL(SUM(CASE zswo.askno16A WHEN '3' THEN zswo.surveyCntA END), 0) surveyCnt16A_3
			     , IFNULL(SUM(CASE zswo.askno16A WHEN '4' THEN zswo.surveyCntA END), 0) surveyCnt16A_4
			     , IFNULL(SUM(CASE zswo.askno16A WHEN '5' THEN zswo.surveyCntA END), 0) surveyCnt16A_5
			     
			  FROM (
	            SELECT 
	            	   zs.ASKNO_0 askno0A,
	            	   0 askno0B,
	            	   zs.ASKNO_1_1 askno1_1A,
	            	   0 askno1_1B,
	            	   zs.ASKNO_1_2 askno1_2A,
	            	   0 askno1_2B,
	            	   zs.ASKNO_1_3 askno1_3A,
	            	   0 askno1_3B,
	            	   zs.ASKNO_1_4 askno1_4A,
	            	   0 askno1_4B,
	            	   zs.ASKNO_2_1 askno2_1A,
	            	   0 askno2_1B,
	            	   zs.ASKNO_2_2 askno2_2A,
	            	   0 askno2_2B,
	            	   zs.ASKNO_2_3 askno2_3A,
	            	   0 askno2_3B,
	            	   zs.ASKNO_2_4 askno2_4A,
	            	   0 askno2_4B,
	            	   zs.ASKNO_3_1 askno3_1A,
	            	   0 askno3_1B,
	            	   zs.ASKNO_3_2 askno3_2A,
	            	   0 askno3_2B,
	            	   zs.ASKNO_3_3 askno3_3A,
	            	   0 askno3_3B,
	            	   zs.ASKNO_3_4 askno3_4A,
	            	   0 askno3_4B,
	            	   zs.ASKNO_3_5 askno3_5A,
	            	   0 askno3_5B,
	            	   zs.ASKNO_4_1 askno4_1A,
	            	   0 askno4_1B,
	            	   zs.ASKNO_4_2 askno4_2A,
	            	   0 askno4_2B,
	            	   zs.ASKNO_4_3 askno4_3A,
	            	   0 askno4_3B,
	            	   zs.ASKNO_4_4 askno4_4A,
	            	   0 askno4_4B,
	            	   zs.ASKNO_5_1 askno5_1A,
	            	   0 askno5_1B,
	            	   zs.ASKNO_5_2 askno5_2A,
	            	   0 askno5_2B,
	            	   zs.ASKNO_5_3 askno5_3A,
	            	   0 askno5_3B,
	            	   zs.ASKNO_5_4 askno5_4A,
	            	   0 askno5_4B,
	            	   zs.ASKNO_5_5 askno5_5A,
	            	   0 askno5_5B,
	            	   zs.ASKNO_6_1 askno6_1A,
	            	   0 askno6_1B,
	            	   zs.ASKNO_6_2 askno6_2A,
	            	   0 askno6_2B,
	            	   zs.ASKNO_6_3 askno6_3A,
	            	   0 askno6_3B,
	            	   zs.ASKNO_6_4 askno6_4A,
	            	   0 askno6_4B,
	            	   zs.ASKNO_6_5 askno6_5A,
	            	   0 askno6_5B,
	            	   zs.ASKNO_7_1 askno7_1A,
	            	   zs.ASKNO_7_2 askno7_2A,
	            	   zs.ASKNO_7_3 askno7_3A,
	            	   zs.ASKNO_7_4 askno7_4A,
	            	   zs.ASKNO_7_5 askno7_5A,
	            	   zs.ASKNO_7_6 askno7_6A,
	            	   zs.ASKNO_7_7 askno7_7A,
	            	   zs.ASKNO_7_8 askno7_8A,
	            	   '' askno7_1B,
	            	   '' askno7_2B,
	            	   '' askno7_3B,
	            	   '' askno7_4B,
	            	   '' askno7_5B,
	            	   '' askno7_6B,
	            	   '' askno7_7B,
	            	   '' askno7_8B,
	            	   zs.ASKNO_7_1_1 askno7_1_1A,
	            	   0 askno7_1_1B,
	            	   zs.ASKNO_7_2_1 askno7_2_1A,
	            	   0 askno7_2_1B,
	            	   zs.ASKNO_8 askno8A,
	            	   0 askno8B,
	            	   zs.ASKNO_9 askno9A,
	            	   0 askno9B,
	            	   zs.ASKNO_10_1 askno10_1A,
	            	   zs.ASKNO_10_2 askno10_2A,
	            	   zs.ASKNO_10_3 askno10_3A,
	            	   zs.ASKNO_10_4 askno10_4A,
	            	   zs.ASKNO_10_5 askno10_5A,
	            	   zs.ASKNO_10_6 askno10_6A,
	            	   zs.ASKNO_10_7 askno10_7A,
	            	   zs.ASKNO_10_8 askno10_8A,
	            	   '' askno10_1B,
	            	   '' askno10_2B,
	            	   '' askno10_3B,
	            	   '' askno10_4B,
	            	   '' askno10_5B,
	            	   '' askno10_6B,
	            	   '' askno10_7B,
	            	   '' askno10_8B,
	            	   zs.ASKNO_11_1 askno11_1A,
	            	   zs.ASKNO_11_2 askno11_2A,
	            	   zs.ASKNO_11_3 askno11_3A,
	            	   zs.ASKNO_11_4 askno11_4A,
	            	   zs.ASKNO_11_5 askno11_5A,
	            	   zs.ASKNO_11_6 askno11_6A,
	            	   '' askno11_1B,
	            	   '' askno11_2B,
	            	   '' askno11_3B,
	            	   '' askno11_4B,
	            	   '' askno11_5B,
	            	   '' askno11_6B,
	            	   zs.ASKNO_12_1 askno12_1A,
	            	   zs.ASKNO_12_2 askno12_2A,
	            	   zs.ASKNO_12_3 askno12_3A,
	            	   zs.ASKNO_12_4 askno12_4A,
	            	   zs.ASKNO_12_5 askno12_5A,
	            	   '' askno12_1B,
	            	   '' askno12_2B,
	            	   '' askno12_3B,
	            	   '' askno12_4B,
	            	   '' askno12_5B,
	            	   zs.ASKNO_14 askno14A,
	            	   0 askno14B,
	            	   zs.ASKNO_15 askno15A,
	            	   0 askno15B,
	            	   zs.ASKNO_16 askno16A,
	            	   0 askno16B,
	            	   COUNT(*) surveyCntA,
	            	   0 surveyCntB 
				  FROM zsurveyresult zs,
				  	   w_organization wo
				 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
				   AND zs.SURVEY_TYPE = 'A'
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
           		<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
				<![CDATA[
	           	 GROUP BY askno0A, 
	           	 		  askno1_1A, askno1_2A, askno1_3A, askno1_4A,
	           	 		  askno2_1A, askno2_2A, askno2_3A, askno2_4A,
	           	 		  askno3_1A, askno3_2A, askno3_3A, askno3_4A, askno3_5A,
	           	 		  askno4_1A, askno4_2A, askno4_3A, askno4_4A,
	           	 		  askno5_1A, askno5_2A, askno5_3A, askno5_4A, askno5_5A,
	           	 		  askno6_1A, askno6_2A, askno6_3A, askno6_4A, askno6_5A,
	           	 		  askno7_1A, askno7_2A, askno7_3A, askno7_4A, askno7_5A, askno7_6A, askno7_7A, askno7_8A,
	           	 		  askno7_1_1A, askno7_2_1A, askno8A, askno9A,
	           	 		  askno10_1A, askno10_2A, askno10_3A, askno10_4A, askno10_5A, askno10_6A, askno10_7A, askno10_8A,
	           	 		  askno11_1A, askno11_2A, askno11_3A, askno11_4A, askno11_5A, askno11_6A,
	           	 		  askno12_1A, askno12_2A, askno12_3A, askno12_4A, askno12_5A,
	           	 		  askno14A, askno15A, askno16A
	           	 UNION
	           	 SELECT 
	           	       0 askno0A,
	            	   zs.ASKNO_0 askno0B,
	            	   0 askno1_1A,
	            	   zs.ASKNO_1_1 askno1_1B,
	            	   0 askno1_2A,
	            	   zs.ASKNO_1_2 askno1_2B,
	            	   0 askno1_3A,
	            	   zs.ASKNO_1_3 askno1_3B,
	            	   0 askno1_4A,
	            	   zs.ASKNO_1_4 askno1_4B,
	            	   0 askno2_1A,
	            	   zs.ASKNO_2_1 askno2_1B,
	            	   0 askno2_2A,
	            	   zs.ASKNO_2_2 askno2_2B,
	            	   0 askno2_3A,
	            	   zs.ASKNO_2_3 askno2_3B,
	            	   0 askno2_4A,
	            	   zs.ASKNO_2_4 askno2_4B,
	            	   0 askno3_1A,
	            	   zs.ASKNO_3_1 askno3_1B,
	            	   0 askno3_2A,
	            	   zs.ASKNO_3_2 askno3_2B,
	            	   0 askno3_3A,
	            	   zs.ASKNO_3_3 askno3_3B,
	            	   0 askno3_4A,
	            	   zs.ASKNO_3_4 askno3_4B,
	            	   0 askno3_5A,
	            	   zs.ASKNO_3_5 askno3_5B,
	            	   0 askno4_1A,
	            	   zs.ASKNO_4_1 askno4_1B,
	            	   0 askno4_2A,
	            	   zs.ASKNO_4_2 askno4_2B,
	            	   0 askno4_3A,
	            	   zs.ASKNO_4_3 askno4_3B,
	            	   0 askno4_4A,
	            	   zs.ASKNO_4_4 askno4_4B,
	            	   0 askno5_1A,
	            	   zs.ASKNO_5_1 askno5_1B,
	            	   0 askno5_2A,
	            	   zs.ASKNO_5_2 askno5_2B,
	            	   0 askno5_3A,
	            	   zs.ASKNO_5_3 askno5_3B,
	            	   0 askno5_4A,
	            	   zs.ASKNO_5_4 askno5_4B,
	            	   0 askno5_5A,
	            	   zs.ASKNO_5_5 askno5_5B,
	            	   0 askno6_1A,
	            	   zs.ASKNO_6_1 askno6_1B,
	            	   0 askno6_2A,
	            	   zs.ASKNO_6_2 askno6_2B,
	            	   0 askno6_3A,
	            	   zs.ASKNO_6_3 askno6_3B,
	            	   0 askno6_4A,
	            	   zs.ASKNO_6_4 askno6_4B,
	            	   0 askno6_5A,
	            	   zs.ASKNO_6_5 askno6_5B,
	            	   '' askno7_1A,
	            	   '' askno7_2A,
	            	   '' askno7_3A,
	            	   '' askno7_4A,
	            	   '' askno7_5A,
	            	   '' askno7_6A,
	            	   '' askno7_7A,
	            	   '' askno7_8A,
	            	   zs.ASKNO_7_1 askno7_1B,
	            	   zs.ASKNO_7_2 askno7_2B,
	            	   zs.ASKNO_7_3 askno7_3B,
	            	   zs.ASKNO_7_4 askno7_4B,
	            	   zs.ASKNO_7_5 askno7_5B,
	            	   zs.ASKNO_7_6 askno7_6B,
	            	   zs.ASKNO_7_7 askno7_7B,
	            	   zs.ASKNO_7_8 askno7_8B,
	            	   0 askno7_1_1A,
	            	   zs.ASKNO_7_1_1 askno7_1_1B,
	            	   0 askno7_2_1A,
	            	   zs.ASKNO_7_2_1 askno7_2_1B,
	            	   0 askno8A,
	            	   zs.ASKNO_8 askno8B,
	            	   0 askno9A,
	            	   zs.ASKNO_9 askno9B,
	            	   '' askno10_1A,
	            	   '' askno10_2A,
	            	   '' askno10_3A,
	            	   '' askno10_4A,
	            	   '' askno10_5A,
	            	   '' askno10_6A,
	            	   '' askno10_7A,
	            	   '' askno10_8A,
	            	   zs.ASKNO_10_1 askno10_1B,
	            	   zs.ASKNO_10_2 askno10_2B,
	            	   zs.ASKNO_10_3 askno10_3B,
	            	   zs.ASKNO_10_4 askno10_4B,
	            	   zs.ASKNO_10_5 askno10_5B,
	            	   zs.ASKNO_10_6 askno10_6B,
	            	   zs.ASKNO_10_7 askno10_7B,
	            	   zs.ASKNO_10_8 askno10_8B,
	            	   '' askno11_1A,
	            	   '' askno11_2A,
	            	   '' askno11_3A,
	            	   '' askno11_4A,
	            	   '' askno11_5A,
	            	   '' askno11_6A,
	            	   zs.ASKNO_11_1 askno11_1B,
	            	   zs.ASKNO_11_2 askno11_2B,
	            	   zs.ASKNO_11_3 askno11_3B,
	            	   zs.ASKNO_11_4 askno11_4B,
	            	   zs.ASKNO_11_5 askno11_5B,
	            	   zs.ASKNO_11_6 askno11_6B,
	            	   '' askno12_1A,
	            	   '' askno12_2A,
	            	   '' askno12_3A,
	            	   '' askno12_4A,
	            	   '' askno12_5A,
	            	   zs.ASKNO_12_1 askno12_1B,
	            	   zs.ASKNO_12_2 askno12_2B,
	            	   zs.ASKNO_12_3 askno12_3B,
	            	   zs.ASKNO_12_4 askno12_4B,
	            	   zs.ASKNO_12_5 askno12_5B,
	            	   0 askno14A,
	            	   zs.ASKNO_14 askno14B,
	            	   0 askno15A,
	            	   zs.ASKNO_15 askno15B,
	            	   0 askno16A,
	           	       zs.ASKNO_16 askno16B,
	            	   0 surveyCntA,
	            	   COUNT(*) surveyCntB
				  FROM zsurveyresult zs,
					   w_organization wo
				 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
				   AND zs.SURVEY_TYPE = 'B'
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
           		<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
				<![CDATA[
	           	 GROUP BY askno0B, 
	           	 		  askno1_1B, askno1_2B, askno1_3B, askno1_4B,
	           	 		  askno2_1B, askno2_2B, askno2_3B, askno2_4B,
	           	 		  askno3_1B, askno3_2B, askno3_3B, askno3_4B, askno3_5B,
	           	 		  askno4_1B, askno4_2B, askno4_3B, askno4_4B,
	           	 		  askno5_1B, askno5_2B, askno5_3B, askno5_4B, askno5_5B,
	           	 		  askno6_1B, askno6_2B, askno6_3B, askno6_4B, askno6_5B,
	           	 		  askno7_1B, askno7_2B, askno7_3B, askno7_4B, askno7_5B, askno7_6B, askno7_7B, askno7_8B,
	           	 		  askno7_1_1B, askno7_2_1B, askno8B, askno9B,
	           	 		  askno10_1B, askno10_2B, askno10_3B, askno10_4B, askno10_5B, askno10_6B, askno10_7B, askno10_8B,
	           	 		  askno11_1B, askno11_2B, askno11_3B, askno11_4B, askno11_5B, askno11_6B,
	           	 		  askno12_1B, askno12_2B, askno12_3B, askno12_4B, askno12_5B,
	           	 		  askno14B, askno15B, askno16B
	           	 ) zswo
	      		]]>
	</select>
	
	<select id="statisticsDAO.getSurvey7OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <![CDATA[
	        SELECT 
	               zs.ASKNO_7_OPINION AS askno7opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_7_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_7_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey7_1_1OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">      
	      <![CDATA[
	        SELECT 
	               zs.ASKNO_7_1_1_OPINION AS askno7_1_1opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_7_1_1_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_7_1_1_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey7_2_1OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_7_2_1_OPINION AS askno7_2_1opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_7_2_1_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_7_2_1_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey10OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_10_OPINION AS askno10opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_10_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_10_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey11OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">	      
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_11_OPINION AS askno11opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_11_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_11_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey12OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">   
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_12_OPINION AS askno12opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_12_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_12_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getSurvey13OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               zs.ASKNO_13_OPINION AS askno13opinion
			  FROM zsurveyresult zs,
				   w_organization wo
			 WHERE zs.ORG_ID = wo.ORGANIZATION_ID
			   AND TRIM(zs.ASKNO_13_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="surveyType">
					zs.SURVEY_TYPE = #surveyType#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(zs.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(zs.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ zs.ORG_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ zs.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY zs.ASKNO_13_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	     <![CDATA[      	 
	     	SELECT IFNULL(SUM(CASE pwo.prequery1 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt01_1
			     , IFNULL(SUM(CASE pwo.prequery1 WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt01_2
			     , IFNULL(SUM(CASE pwo.prequery1 WHEN '3' THEN pwo.prequeryCnt END), 0) prequeryCnt01_3
			     , IFNULL(SUM(CASE pwo.prequery1 WHEN '4' THEN pwo.prequeryCnt END), 0) prequeryCnt01_4
			     , IFNULL(SUM(CASE pwo.prequery1 WHEN '5' THEN pwo.prequeryCnt END), 0) prequeryCnt01_5
			     , IFNULL(SUM(CASE pwo.prequery1 WHEN '6' THEN pwo.prequeryCnt END), 0) prequeryCnt01_6
			  	 , IFNULL(SUM(CASE pwo.prequery2_1 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_1
			     , IFNULL(SUM(CASE pwo.prequery2_2 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_2
			     , IFNULL(SUM(CASE pwo.prequery2_3 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_3
			     , IFNULL(SUM(CASE pwo.prequery2_4 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_4
			     , IFNULL(SUM(CASE pwo.prequery2_5 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_5
			     , IFNULL(SUM(CASE pwo.prequery2_6 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_6
			     , IFNULL(SUM(CASE pwo.prequery2_7 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_7
			     , IFNULL(SUM(CASE pwo.prequery2_8 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt02_8
			     , IFNULL(SUM(CASE pwo.prequery3 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt03_1
			     , IFNULL(SUM(CASE pwo.prequery3 WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt03_2
			  	 , IFNULL(SUM(CASE pwo.prequery5 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt05_1
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt05_2
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '3' THEN pwo.prequeryCnt END), 0) prequeryCnt05_3
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '4' THEN pwo.prequeryCnt END), 0) prequeryCnt05_4
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '5' THEN pwo.prequeryCnt END), 0) prequeryCnt05_5
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '6' THEN pwo.prequeryCnt END), 0) prequeryCnt05_6
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '7' THEN pwo.prequeryCnt END), 0) prequeryCnt05_7
			     , IFNULL(SUM(CASE pwo.prequery5 WHEN '8' THEN pwo.prequeryCnt END), 0) prequeryCnt05_8
			     , IFNULL(SUM(CASE pwo.prequery6_1_1 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_1
			     , IFNULL(SUM(CASE pwo.prequery6_1_2 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_2
			     , IFNULL(SUM(CASE pwo.prequery6_1_3 WHEN '0' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_3_1
			     , IFNULL(SUM(CASE pwo.prequery6_1_3 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_3_2
			     , IFNULL(SUM(CASE pwo.prequery6_1_4 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_4
			     , IFNULL(SUM(CASE pwo.prequery6_1_5 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_5
			     , IFNULL(SUM(CASE pwo.prequery6_1_6 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_6
			     , IFNULL(SUM(CASE pwo.prequery6_1_7 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_7
			     , IFNULL(SUM(CASE pwo.prequery6_1_8 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_1_8
			  	 , IFNULL(SUM(CASE pwo.prequery6_2_1 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1
			     , IFNULL(SUM(CASE pwo.prequery6_2_2 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_2
			     , IFNULL(SUM(CASE pwo.prequery6_2_3 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_3
			     , IFNULL(SUM(CASE pwo.prequery6_2_4 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_4
			     , IFNULL(SUM(CASE pwo.prequery6_2_5 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_5
			     , IFNULL(SUM(CASE pwo.prequery6_2_6 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_6
			     , IFNULL(SUM(CASE pwo.prequery6_2_7 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_7
			  	 , IFNULL(SUM(CASE pwo.prequery6_2_1_1 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_1
			     , IFNULL(SUM(CASE pwo.prequery6_2_1_2 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_2
			     , IFNULL(SUM(CASE pwo.prequery6_2_1_3 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_3
			     , IFNULL(SUM(CASE pwo.prequery6_2_1_4 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_4
			     , IFNULL(SUM(CASE pwo.prequery6_2_1_5 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_5
			     , IFNULL(SUM(CASE pwo.prequery6_2_1_6 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_2_1_6
			     , IFNULL(SUM(CASE pwo.prequery6_3_1 WHEN '0' THEN pwo.prequeryCnt END), 0) prequeryCnt06_3_1_1
			     , IFNULL(SUM(CASE pwo.prequery6_3_1 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt06_3_1_2
			     , IFNULL(SUM(CASE pwo.prequery6_3_2 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_3_2
			     , IFNULL(SUM(CASE pwo.prequery6_3_3 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_3_3
			     , IFNULL(SUM(CASE pwo.prequery6_3_4 WHEN 'Y' THEN pwo.prequeryCnt END), 0) prequeryCnt06_3_4
			     , IFNULL(SUM(CASE pwo.prequery7 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt07_1
			     , IFNULL(SUM(CASE pwo.prequery7 WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt07_2
			     , IFNULL(SUM(CASE pwo.prequery7 WHEN '3' THEN pwo.prequeryCnt END), 0) prequeryCnt07_3
			     , IFNULL(SUM(CASE pwo.prequery7 WHEN '4' THEN pwo.prequeryCnt END), 0) prequeryCnt07_4
			  	 , IFNULL(SUM(CASE pwo.prequery8 WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt08_1
			     , IFNULL(SUM(CASE pwo.prequery8 WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt08_2
			     , IFNULL(SUM(CASE pwo.prequery8 WHEN '3' THEN pwo.prequeryCnt END), 0) prequeryCnt08_3
			     , IFNULL(SUM(CASE SUBSTRING_INDEX(pwo.prequery12, ',', 1) WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt12_1
			     , IFNULL(SUM(CASE SUBSTRING_INDEX(pwo.prequery12, ',', 1) WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt12_2
			     , IFNULL(SUM(CASE SUBSTRING_INDEX(pwo.prequery12, ',', 1) WHEN '3' THEN pwo.prequeryCnt END), 0) prequeryCnt12_3
			     , IFNULL(SUM(CASE SUBSTRING_INDEX(pwo.prequery12, ',', -1) WHEN '1' THEN pwo.prequeryCnt END), 0) prequeryCnt12_4
			     , IFNULL(SUM(CASE SUBSTRING_INDEX(pwo.prequery12, ',', -1) WHEN '2' THEN pwo.prequeryCnt END), 0) prequeryCnt12_5
			  FROM (
	            SELECT 
	            	   p.PREQUERY_1 prequery1,
	            	   p.PREQUERY_2_1 prequery2_1,
	            	   p.PREQUERY_2_2 prequery2_2,
	            	   p.PREQUERY_2_3 prequery2_3,
	            	   p.PREQUERY_2_4 prequery2_4,
	            	   p.PREQUERY_2_5 prequery2_5,
	            	   p.PREQUERY_2_6 prequery2_6,
	            	   p.PREQUERY_2_7 prequery2_7,
	            	   p.PREQUERY_2_8 prequery2_8,
	            	   p.PREQUERY_3 prequery3,
	            	   p.PREQUERY_5 prequery5,
	            	   p.PREQUERY_6_1_1 prequery6_1_1,
	            	   p.PREQUERY_6_1_2 prequery6_1_2,
	            	   p.PREQUERY_6_1_3 prequery6_1_3,
	            	   p.PREQUERY_6_1_4 prequery6_1_4,
	            	   p.PREQUERY_6_1_5 prequery6_1_5,
	            	   p.PREQUERY_6_1_6 prequery6_1_6,
	            	   p.PREQUERY_6_1_7 prequery6_1_7,
	            	   p.PREQUERY_6_1_8 prequery6_1_8,
	            	   p.PREQUERY_6_2_1 prequery6_2_1,
	            	   p.PREQUERY_6_2_2 prequery6_2_2,
	            	   p.PREQUERY_6_2_3 prequery6_2_3,
	            	   p.PREQUERY_6_2_4 prequery6_2_4,
	            	   p.PREQUERY_6_2_5 prequery6_2_5,
	            	   p.PREQUERY_6_2_6 prequery6_2_6,
	            	   p.PREQUERY_6_2_7 prequery6_2_7,
	            	   p.PREQUERY_6_2_1_1 prequery6_2_1_1,
	            	   p.PREQUERY_6_2_1_2 prequery6_2_1_2,
	            	   p.PREQUERY_6_2_1_3 prequery6_2_1_3,
	            	   p.PREQUERY_6_2_1_4 prequery6_2_1_4,
	            	   p.PREQUERY_6_2_1_5 prequery6_2_1_5,
	            	   p.PREQUERY_6_2_1_6 prequery6_2_1_6,
	            	   p.PREQUERY_6_3_1 prequery6_3_1,
	            	   p.PREQUERY_6_3_2 prequery6_3_2,
	            	   p.PREQUERY_6_3_3 prequery6_3_3,
	            	   p.PREQUERY_6_3_4 prequery6_3_4,
	            	   p.PREQUERY_7 prequery7,
	            	   p.PREQUERY_8 prequery8,
	            	   p.PREQUERY_12 prequery12,
	            	   COUNT(*) prequeryCnt
				  FROM prequery p,
				  	   w_organization wo
				 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
				   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
           		<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
				<![CDATA[
	           	 GROUP BY prequery1, prequery2_1, prequery2_2, prequery2_3, prequery2_4, prequery2_5, prequery2_6, prequery2_7, prequery2_8, prequery3, prequery5, 
	           	 		  prequery6_1_1, prequery6_1_2, prequery6_1_3, prequery6_1_4, prequery6_1_5, prequery6_1_6, prequery6_1_7, prequery6_1_8, 
	           	 		  prequery6_2_1, prequery6_2_2, prequery6_2_3, prequery6_2_4, prequery6_2_5, prequery6_2_6, prequery6_2_7, 
	           	 		  prequery6_2_1_1, prequery6_2_1_2, prequery6_2_1_3, prequery6_2_1_4, prequery6_2_1_5, prequery6_2_1_6, prequery6_3_1, prequery6_3_2, prequery6_3_3, prequery6_3_4,
	           	 		  prequery7, prequery8, prequery12
	           	 ) pwo
	      		]]>
	</select>
	
	<select id="statisticsDAO.getPrequery2_8OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_2_8_OPINION AS prequery2_8opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_2_8_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_2_8_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery4List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_4_1 AS prequery4_1,
	               p.PREQUERY_4_2 AS prequery4_2
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
			<![CDATA[
				ORDER BY PREQUERY_NO
				]]>
	</select>
	
	<select id="statisticsDAO.getPrequery5_8OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_5_8_OPINION AS prequery5_8opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_5_8_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_5_8_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery6_1_7OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_6_1_7_OPINION AS prequery6_1_7opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_6_1_7_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_6_1_7_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery6_2_6OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_6_2_6_OPINION AS prequery6_2_6opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_6_2_6_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_6_2_6_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery6_2_1_6OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_6_2_1_6_OPINION AS prequery6_2_1_6opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_6_2_1_6_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_6_2_1_6_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery6_3_3OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_6_3_3_OPINION AS prequery6_3_3opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_6_3_3_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_6_3_3_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery7_4OpinionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_7_4_OPINION AS prequery7_4opinion
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_7_4_OPINION) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate> 
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
		  	<![CDATA[
	         GROUP BY p.PREQUERY_7_4_OPINION
	      	]]>
	</select>
	
	<select id="statisticsDAO.getPrequery9List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_9_1 AS prequery9_1,
	               p.PREQUERY_9_2 AS prequery9_2
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
			<![CDATA[
				ORDER BY PREQUERY_NO
				]]>
	</select>
	
	<select id="statisticsDAO.getPrequery10List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_10_1 AS prequery10_1,
	               p.PREQUERY_10_2 AS prequery10_2,
	               p.PREQUERY_10_3 AS prequery10_3,
	               p.PREQUERY_10_4 AS prequery10_4
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
			<![CDATA[
				ORDER BY PREQUERY_NO
				]]>
	</select>
	
	<select id="statisticsDAO.getPrequery11List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_11 AS prequery11
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND TRIM(p.PREQUERY_11) != ''
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
			<![CDATA[
				ORDER BY PREQUERY_NO
				]]>
	</select>
	
	<select id="statisticsDAO.getPrequery13List" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
	    <![CDATA[
	        SELECT 
	               p.PREQUERY_13_1 AS prequery13_1,
	               p.PREQUERY_13_2 AS prequery13_2,
	               p.PREQUERY_13_3 AS prequery13_3,
	               p.PREQUERY_13_4 AS prequery13_4,
	               p.PREQUERY_13_5 AS prequery13_5,
	               p.PREQUERY_13_6 AS prequery13_6,
	               p.PREQUERY_13_7 AS prequery13_7
			  FROM prequery p,
				   w_organization wo
			 WHERE p.PREQUERY_ID = wo.ORGANIZATION_ID
			   AND (TRIM(p.PREQUERY_13_1) != '' OR TRIM(p.PREQUERY_13_2) != '' OR
				 	TRIM(p.PREQUERY_13_3) != '' OR TRIM(p.PREQUERY_13_4) != '' OR
				 	TRIM(p.PREQUERY_13_5) != '' OR TRIM(p.PREQUERY_13_6) != '' OR
				 	TRIM(p.PREQUERY_13_7) != '')
			   AND wo.org_type IN
				 ]]>
				<iterate property="orgList" open="(" close=")" conjunction=",">
					#orgList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="sdate">
	          	<isNotEmpty property="edate">
				<![CDATA[ date_format(p.REG_DATE,'%Y%m%d') between #sdate# and #edate# ]]>
				</isNotEmpty>
				</isNotEmpty>
				<![CDATA[AND substr(p.CONSULTING_APPLICATION_NO,6,1) in]]>
				<iterate property="typeList" open="(" close=")" conjunction=",">
					#typeList[]#
				</iterate>
				<isNotEmpty prepend="AND" property="prequery1">
					p.PREQUERY_1 = #prequery1#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="orgId">
				<![CDATA[ p.PREQUERY_ID = #orgId#]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="consulting_application_no">
				<![CDATA[ p.CONSULTING_APPLICATION_NO = #consulting_application_no#]]>
				</isNotEmpty>
			<![CDATA[
				ORDER BY PREQUERY_NO
				]]>
	</select>
	
	<select id="statisticsDAO.getDailyList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
		<![CDATA[
			SELECT * FROM 
				(select adddate(#sdate#,t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) days from
			 	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
			 	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
			 	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
			 	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
			 	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
			WHERE days 
			BETWEEN #sdate# AND #edate#
		]]>
	</select>
	
	<select id="statisticsDAO.getMonthlyList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
		<![CDATA[
			SELECT 
			    DATE_FORMAT(m1, '%Y-%m') AS months
			FROM(
			    SELECT 
			        (#sdate# - INTERVAL DAYOFMONTH(#sdate#)-1 DAY) +INTERVAL m MONTH as m1
			    FROM(
			        SELECT @rownum:=@rownum+1 as m FROM
			        (SELECT 1 union SELECT 2 union SELECT 3 union SELECT 4) t1,
			        (SELECT 1 union SELECT 2 union SELECT 3 union SELECT 4) t2,
			        (SELECT 1 union SELECT 2 union SELECT 3 union SELECT 4) t3,
			        (SELECT 1 union SELECT 2 union SELECT 3 union SELECT 4) t4,
			        (SELECT @rownum:=-1) t0
			    ) d1
			) d2 
			WHERE m1 <= #edate#
			ORDER BY m1
		]]>
	</select>
	
	
	<sql id="getCounsultingListSelectCntCommon">
		<isNotEmpty property="consultingTypeCbx">
			,IFNULL(SUM(CASE wc.consultingType WHEN 'public' THEN wc.counselCnt END),0) consultingTypePublicCnt
        	,IFNULL(SUM(CASE wc.consultingType WHEN 'civil' THEN wc.counselCnt END),0) consultingTypeCivilCnt
        	,IFNULL(SUM(CASE wc.consultingType WHEN 'personal' THEN wc.counselCnt END),0) consultingTypePersonalCnt
        	,IFNULL(SUM(CASE wc.consultingType WHEN 'etc' THEN wc.counselCnt END),0) consultingTypeEtcCnt
		</isNotEmpty>
		<isNotEmpty property="receivedTypeCbx">
			,IFNULL(SUM(CASE wc.receivedType WHEN 'tel' THEN wc.counselCnt END),0) receivedTypeTelCnt
        	,IFNULL(SUM(CASE wc.receivedType WHEN 'mail' THEN wc.counselCnt END),0) receivedTypeMailCnt
        	,IFNULL(SUM(CASE wc.receivedType WHEN 'visit' THEN wc.counselCnt END),0) receivedTypeVisitCnt
        	,IFNULL(SUM(CASE wc.receivedType WHEN 'move' THEN wc.counselCnt END),0) receivedTypeMoveCnt
		</isNotEmpty>
		<isNotEmpty property="consultingReqTypeCbx">
			,IFNULL(SUM(CASE wc.consultingReqType WHEN 'relaccident' THEN wc.counselCnt END),0) consultingReqTypeRelCnt
        	,IFNULL(SUM(CASE wc.consultingReqType WHEN 'simple' THEN wc.counselCnt END),0) consultingReqTypeSimCnt
        	,IFNULL(SUM(CASE wc.consultingReqType WHEN 'etc' THEN wc.counselCnt END),0) cconsultingReqTypeEtcCnt
		</isNotEmpty>
		<isNotEmpty property="contactMethodTypeCbx">
			,IFNULL(SUM(CASE wc.contactMethodType WHEN 'internet' THEN wc.counselCnt END),0) contactMethodTypeIntCnt
        	,IFNULL(SUM(CASE wc.contactMethodType WHEN 'support' THEN wc.counselCnt END),0) contactMethodTypeSupCnt
        	,IFNULL(SUM(CASE wc.contactMethodType WHEN 'gov' THEN wc.counselCnt END),0) contactMethodTypeGovCnt
        	,IFNULL(SUM(CASE wc.contactMethodType WHEN 'etc' THEN wc.counselCnt END),0) contactMethodTypeEtcCnt
        	,IFNULL(SUM(CASE wc.contactMethodType WHEN 'unknown' THEN wc.counselCnt END),0) contactMethodTypeUnkCnt
		</isNotEmpty>
		<isNotEmpty property="clientGenderCbx">
			,IFNULL(SUM(CASE wc.clientGender WHEN 'female' THEN wc.counselCnt END),0) clientGenderFemaleCnt
        	,IFNULL(SUM(CASE wc.clientGender WHEN 'male' THEN wc.counselCnt END),0) clientGenderMaleCnt
       		,IFNULL(SUM(CASE wc.clientGender WHEN 'unknown' THEN wc.counselCnt END),0) clientGenderUnknownCnt
		</isNotEmpty>
		<isNotEmpty property="clientVictimRelTypeCbx">
			,IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'me' THEN wc.counselCnt END),0) clientVictimRelTypeMeCnt
        	,IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'agent' THEN wc.counselCnt END),0) clientVictimRelTypeAgeCnt
        	,IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'relmanager' THEN wc.counselCnt END),0) clientVictimRelTypeRelCnt
        	,IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'doer' THEN wc.counselCnt END),0) clientVictimRelTypeDoerCnt
       	 	,IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) clientVictimRelTypeEtcCnt
		</isNotEmpty>
		<isNotEmpty property="victimGenderTypeCbx">
			,IFNULL(SUM(CASE wc.victimGenderType WHEN 'female' THEN wc.counselCnt END),0) victimGenderTypeFemaleCnt
        	,IFNULL(SUM(CASE wc.victimGenderType WHEN 'male' THEN wc.counselCnt END),0) victimGenderTypeMaleCnt
        	,IFNULL(SUM(CASE wc.victimGenderType WHEN 'unknown' THEN wc.counselCnt END),0) victimGenderTypeUnknownCnt
        	,IFNULL(SUM(CASE wc.victimGenderType WHEN 'none' THEN wc.counselCnt END),0) victimGenderTypeNoneCnt
		</isNotEmpty>
		<isNotEmpty property="offenderGenderTypeCbx">
			,IFNULL(SUM(CASE wc.offenderGenderType WHEN 'female' THEN wc.counselCnt END),0) offenderGenderTypeFemaleCnt
        	,IFNULL(SUM(CASE wc.offenderGenderType WHEN 'male' THEN wc.counselCnt END),0) offenderGenderTypeMaleCnt
        	,IFNULL(SUM(CASE wc.offenderGenderType WHEN 'unknown' THEN wc.counselCnt END),0) offenderGenderTypeUnkownCnt
        	,IFNULL(SUM(CASE wc.offenderGenderType WHEN 'none' THEN wc.counselCnt END),0) offenderGenderTypeNoneCnt
		</isNotEmpty>
		<isNotEmpty property="offenderVictimRelTypeCbx">
			,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'boss' THEN wc.counselCnt END),0) offenderVictimRelTypeBossCnt
        	,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'senior' THEN wc.counselCnt END),0) offenderVictimRelTypeSenCnt
        	,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'partner' THEN wc.counselCnt END),0) offenderVictimRelTypePartCnt
        	,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'otherrel' THEN wc.counselCnt END),0) offenderVictimRelTypeOthCnt
			,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) offenderVictimRelTypeEtcCnt
			,IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'unknown' THEN wc.counselCnt END),0) offenderVictimRelTypeUnkCnt
		</isNotEmpty>
	</sql>

	<select id="statisticsDAO.getConsultingList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(wc.counselCnt),0) counselCnt1
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	    ]]>
	             <isNotEmpty property="sdate">
					<isNotEmpty property="edate">
						AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN STR_TO_DATE(#sdate#,'%Y-%m-%d') AND DATE_ADD(STR_TO_DATE(#edate#,'%Y-%m-%d'), interval +1 DAY)
					</isNotEmpty>
					<isEmpty property="edate">
						AND consulting_start_date > STR_TO_DATE(#sdate#,'%Y-%m-%d')
					</isEmpty>
				</isNotEmpty>
	      <![CDATA[
	           	 GROUP BY regDate
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(wc.counselCnt),0) counselCnt1
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	           	 GROUP BY regDate
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getConsultingTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'public' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'civil' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'personal' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   consulting_type consultingType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m-%d') AND DATE_ADD(DATE_FORMAT(#edate#, '%Y-%m-%d'), interval +1 DAY)
	               AND consulting_type IN
	      ]]>
	               <iterate property="consultingTypeCbx" open="(" close=")" conjunction=",">
						#consultingTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, consultingType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.consultingType WHEN 'public' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'civil' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'personal' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.consultingType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   consulting_type consultingType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND consulting_type IN
	      ]]>
	               <iterate property="consultingTypeCbx" open="(" close=")" conjunction=",">
						#consultingTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, consultingType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getReceivedTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'tel' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'mail' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'visit' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'move' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   received_type receivedType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND received_type IN
	      ]]>
	               <iterate property="receivedTypeCbx" open="(" close=")" conjunction=",">
						#receivedTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, receivedType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.receivedType WHEN 'tel' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'mail' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'visit' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.receivedType WHEN 'move' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   received_type receivedType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND received_type IN
	      ]]>
	               <iterate property="receivedTypeCbx" open="(" close=")" conjunction=",">
						#receivedTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, receivedType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getConsultingReqTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.consultingReqType WHEN 'relaccident' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.consultingReqType WHEN 'simple' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.consultingReqType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   consulting_req_type consultingReqType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND consulting_req_type IN
	      ]]>
	               <iterate property="consultingReqTypeCbx" open="(" close=")" conjunction=",">
						#consultingReqTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, consultingReqType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.consultingReqType WHEN 'relaccident' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.consultingReqType WHEN 'simple' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.consultingReqType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   consulting_req_type consultingReqType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND consulting_req_type IN
	      ]]>
	               <iterate property="consultingReqTypeCbx" open="(" close=")" conjunction=",">
						#consultingReqTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, consultingReqType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getContactMethodTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'internet' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'support' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'gov' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   contact_method_type contactMethodType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND contact_method_type IN
	      ]]>
	               <iterate property="contactMethodTypeCbx" open="(" close=")" conjunction=",">
						#contactMethodTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, contactMethodType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.contactMethodType WHEN 'internet' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'support' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'gov' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.contactMethodType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   contact_method_type contactMethodType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND contact_method_type IN
	      ]]>
	               <iterate property="contactMethodTypeCbx" open="(" close=")" conjunction=",">
						#contactMethodTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, contactMethodType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getClientGenderList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   client_gender clientGender,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND client_gender IN
	      ]]>
	               <iterate property="clientGenderCbx" open="(" close=")" conjunction=",">
						#clientGenderCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientGender
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.clientGender WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   client_gender clientGender,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND client_gender IN
	      ]]>
	               <iterate property="clientGenderCbx" open="(" close=")" conjunction=",">
						#clientGenderCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientGender
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getClientVictimRelTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'me' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'agent' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'relmanager' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'doer' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   client_victim_rel_type clientVictimRelType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND client_victim_rel_type IN
	      ]]>
	               <iterate property="clientVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#clientVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientVictimRelType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'me' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'agent' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'relmanager' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'doer' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   client_victim_rel_type clientVictimRelType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND client_victim_rel_type IN
	      ]]>
	               <iterate property="clientVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#clientVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientVictimRelType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getVictimGenderTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'none' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   victim_gender_type victimGenderType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND victim_gender_type IN
	      ]]>
	               <iterate property="victimGenderTypeCbx" open="(" close=")" conjunction=",">
						#victimGenderTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, victimGenderType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.victimGenderType WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.victimGenderType WHEN 'none' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   victim_gender_type victimGenderType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND victim_gender_type IN
	      ]]>
	               <iterate property="victimGenderTypeCbx" open="(" close=")" conjunction=",">
						#victimGenderTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, victimGenderType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getOffenderGenderTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'none' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   offender_gender_type offenderGenderType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND offender_gender_type IN
	      ]]>
	               <iterate property="offenderGenderTypeCbx" open="(" close=")" conjunction=",">
						#offenderGenderTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, offenderGenderType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.offenderGenderType WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.offenderGenderType WHEN 'none' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   offender_gender_type offenderGenderType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND offender_gender_type IN
	      ]]>
	               <iterate property="offenderGenderTypeCbx" open="(" close=")" conjunction=",">
						#offenderGenderTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, offenderGenderType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getOffenderVictimRelTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'boss' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'senior' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'partner' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'otherrel' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt6
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   offender_victim_rel_type offenderVictimRelType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND offender_victim_rel_type IN
	      ]]>
	               <iterate property="offenderVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#offenderVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, offenderVictimRelType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'boss' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'senior' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'partner' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'otherrel' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.offenderVictimRelType WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt6
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   offender_victim_rel_type offenderVictimRelType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND offender_victim_rel_type IN
	      ]]>
	               <iterate property="offenderVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#offenderVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, offenderVictimRelType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getHarmFirstTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.harmFirstTypeRape WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.harmFirstTypeHarass WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.harmFirstTypeVerbal WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.harmFirstTypeVisual WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.harmFirstTypeEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   harm_first_type_rape harmFirstTypeRape,
	            	   harm_first_type_harass harmFirstTypeHarass,
	            	   harm_first_type_verbal harmFirstTypeVerbal,
	            	   harm_first_type_visual harmFirstTypeVisual,
	            	   harm_first_type_etc harmFirstTypeEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	      		   <isNotEmpty prepend="AND" property="harmFirstTypeCbx">
	               <iterate property="harmFirstTypeCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="harmFirstTypeCbx[]" compareValue="rape">
							harm_first_type_rape = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="harass">
							harm_first_type_harass = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="verbal">
							harm_first_type_verbal = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="visual">
							harm_first_type_visual = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="etc">
							harm_first_type_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, harmFirstTypeRape, harmFirstTypeHarass, harmFirstTypeVerbal, harmFirstTypeVisual, harmFirstTypeEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.harmFirstTypeRape WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.harmFirstTypeHarass WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.harmFirstTypeVerbal WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.harmFirstTypeVisual WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.harmFirstTypeEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   harm_first_type_rape harmFirstTypeRape,
	            	   harm_first_type_harass harmFirstTypeHarass,
	            	   harm_first_type_verbal harmFirstTypeVerbal,
	            	   harm_first_type_visual harmFirstTypeVisual,
	            	   harm_first_type_etc harmFirstTypeEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	                <isNotEmpty prepend="AND" property="harmFirstTypeCbx">
	               <iterate property="harmFirstTypeCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="harmFirstTypeCbx[]" compareValue="rape">
							harm_first_type_rape = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="harass">
							harm_first_type_harass = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="verbal">
							harm_first_type_verbal = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="visual">
							harm_first_type_visual = 'Y'
						</isEqual>
						<isEqual property="harmFirstTypeCbx[]" compareValue="etc">
							harm_first_type_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, harmFirstTypeRape, harmFirstTypeHarass, harmFirstTypeVerbal, harmFirstTypeVisual, harmFirstTypeEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getHarmSecTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.harmSecTypeSecurity WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.harmSecTypeSeprate WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.harmSecTypeIntention WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.harmSecTypeIdentity WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.harmSecTypeEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   harm_sec_type_security harmSecTypeSecurity,
	            	   harm_sec_type_seprate harmSecTypeSeprate,
	            	   harm_sec_type_intention harmSecTypeIntention,
	            	   harm_sec_type_identity harmSecTypeIdentity,
	            	   harm_sec_etc harmSecTypeEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	      		   <isNotEmpty prepend="AND" property="harmSecTypeCbx">
	               <iterate property="harmSecTypeCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="harmSecTypeCbx[]" compareValue="security">
							harm_sec_type_security = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="seprate">
							harm_sec_type_seprate = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="intention">
							harm_sec_type_intention = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="identity">
							harm_sec_type_identity = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="etc">
							harm_sec_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, harmSecTypeSecurity, harmSecTypeSeprate, harmSecTypeIntention, harmSecTypeIdentity, harmSecTypeEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.harmSecTypeSecurity WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.harmSecTypeSeprate WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.harmSecTypeIntention WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.harmSecTypeIdentity WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.harmSecTypeEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   harm_sec_type_security harmSecTypeSecurity,
	            	   harm_sec_type_seprate harmSecTypeSeprate,
	            	   harm_sec_type_intention harmSecTypeIntention,
	            	   harm_sec_type_identity harmSecTypeIdentity,
	            	   harm_sec_etc harmSecTypeEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	               <isNotEmpty prepend="AND" property="harmSecTypeCbx">
	               <iterate property="harmSecTypeCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="harmSecTypeCbx[]" compareValue="security">
							harm_sec_type_security = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="seprate">
							harm_sec_type_seprate = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="intention">
							harm_sec_type_intention = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="identity">
							harm_sec_type_identity = 'Y'
						</isEqual>
						<isEqual property="harmSecTypeCbx[]" compareValue="etc">
							harm_sec_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, harmSecTypeSecurity, harmSecTypeSeprate, harmSecTypeIntention, harmSecTypeIdentity, harmSecTypeEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getResponseTypeIntroOrgList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgWomen WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgLabor WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgPolice WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgEducation WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgHuman WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt6
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   response_type_intro_org_women responseTypeIntroOrgWomen,
	            	   response_type_intro_org_labor responseTypeIntroOrgLabor,
	            	   response_type_intro_org_police responseTypeIntroOrgPolice,
	            	   response_type_intro_org_education responseTypeIntroOrgEducation,
	            	   response_type_intro_org_human responseTypeIntroOrgHuman,
	            	   response_type_intro_org_etc responseTypeIntroOrgEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	      		   <isNotEmpty prepend="AND" property="responseTypeIntroOrgCbx">
	               <iterate property="responseTypeIntroOrgCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="responseTypeIntroOrgCbx[]" compareValue="women">
							response_type_intro_org_women = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="labor">
							response_type_intro_org_labor = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="police">
							response_type_intro_org_police = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="education">
							response_type_intro_org_education = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="human">
							response_type_intro_org_human = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="etc">
							response_type_intro_org_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, responseTypeIntroOrgWomen, responseTypeIntroOrgLabor, responseTypeIntroOrgPolice, responseTypeIntroOrgEducation, responseTypeIntroOrgHuman, responseTypeIntroOrgEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.responseTypeIntroOrgWomen WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgLabor WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgPolice WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgEducation WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgHuman WHEN 'Y' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.responseTypeIntroOrgEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt6
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   response_type_intro_org_women responseTypeIntroOrgWomen,
	            	   response_type_intro_org_labor responseTypeIntroOrgLabor,
	            	   response_type_intro_org_police responseTypeIntroOrgPolice,
	            	   response_type_intro_org_education responseTypeIntroOrgEducation,
	            	   response_type_intro_org_human responseTypeIntroOrgHuman,
	            	   response_type_intro_org_etc responseTypeIntroOrgEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	               <isNotEmpty prepend="AND" property="responseTypeIntroOrgCbx">
	               <iterate property="responseTypeIntroOrgCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="responseTypeIntroOrgCbx[]" compareValue="women">
							response_type_intro_org_women = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="labor">
							response_type_intro_org_labor = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="police">
							response_type_intro_org_police = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="education">
							response_type_intro_org_education = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="human">
							response_type_intro_org_human = 'Y'
						</isEqual>
						<isEqual property="responseTypeIntroOrgCbx[]" compareValue="etc">
							response_type_intro_org_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, responseTypeIntroOrgWomen, responseTypeIntroOrgLabor, responseTypeIntroOrgPolice, responseTypeIntroOrgEducation, responseTypeIntroOrgHuman, responseTypeIntroOrgEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getResponseTypeServiceRelList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelCon WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelLaw WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelMedical WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m-%d') regDate,
	            	   response_type_service_rel_con responseTypeServiceRelCon,
	            	   response_type_service_rel_law responseTypeServiceRelLaw,
	            	   response_type_service_rel_medical responseTypeServiceRelMedical,
	            	   response_type_service_rel_etc responseTypeServiceRelEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	      		   <isNotEmpty prepend="AND" property="responseTypeServiceRelCbx">
	               <iterate property="responseTypeServiceRelCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="responseTypeServiceRelCbx[]" compareValue="con">
							response_type_service_rel_con = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="law">
							response_type_service_rel_law = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="medical">
							response_type_service_rel_medical = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="etc">
							response_type_service_rel_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, responseTypeServiceRelCon, responseTypeServiceRelLaw, responseTypeServiceRelMedical, responseTypeServiceRelEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.responseTypeServiceRelCon WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelLaw WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelMedical WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.responseTypeServiceRelEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(consulting_start_date, '%Y-%m') regDate,
	            	   response_type_service_rel_con responseTypeServiceRelCon,
	            	   response_type_service_rel_law responseTypeServiceRelLaw,
	            	   response_type_service_rel_medical responseTypeServiceRelMedical,
	            	   response_type_service_rel_etc responseTypeServiceRelEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_history_master
	             WHERE delete_yn = 'N'
	               AND DATE_FORMAT(consulting_start_date, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	               <isNotEmpty prepend="AND" property="responseTypeServiceRelCbx">
	               <iterate property="responseTypeServiceRelCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="responseTypeServiceRelCbx[]" compareValue="con">
							response_type_service_rel_con = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="law">
							response_type_service_rel_law = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="medical">
							response_type_service_rel_medical = 'Y'
						</isEqual>
						<isEqual property="responseTypeServiceRelCbx[]" compareValue="etc">
							response_type_service_rel_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, responseTypeServiceRelCon, responseTypeServiceRelLaw, responseTypeServiceRelMedical, responseTypeServiceRelEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(wc.counselCnt),0) counselCnt1
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
						AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN STR_TO_DATE(#sdate#,'%Y-%m-%d') AND DATE_ADD(STR_TO_DATE(#edate#,'%Y-%m-%d'), interval +1 DAY)
	           	 GROUP BY regDate
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(wc.counselCnt),0) counselCnt1
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	           	 GROUP BY regDate
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionType WHEN 'A' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionType WHEN 'B' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionType WHEN 'C' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionType WHEN 'D' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   SUBSTR(wcam.consulting_action_no,6,1) actionType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND SUBSTR(wcam.consulting_action_no,6,1) IN
	      ]]>
	               <iterate property="actionTypeCbx" open="(" close=")" conjunction=",">
						#actionTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionType WHEN 'A' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionType WHEN 'B' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionType WHEN 'C' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionType WHEN 'D' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   SUBSTR(wcam.consulting_action_no,6,1) actionType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND SUBSTR(wcam.consulting_action_no,6,1) IN
	      ]]>
	               <iterate property="actionTypeCbx" open="(" close=")" conjunction=",">
						#actionTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getStepStatusList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 1 THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 2 THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 3 THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 4 THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 5 THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 6 THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 7 THEN wc.counselCnt END),0) counselCnt7,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 8 THEN wc.counselCnt END),0) counselCnt8
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam2.step_status stepStatus,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam2.step_status IN
	      ]]>
	               <iterate property="stepStatusCbx" open="(" close=")" conjunction=",">
						#stepStatusCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, stepStatus
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.stepStatus WHEN 1 THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 2 THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 3 THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 4 THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 5 THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 6 THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 7 THEN wc.counselCnt END),0) counselCnt7,
        			IFNULL(SUM(CASE wc.stepStatus WHEN 8 THEN wc.counselCnt END),0) counselCnt8
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam2.step_status stepStatus,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam2.step_status IN
	      ]]>
	               <iterate property="stepStatusCbx" open="(" close=")" conjunction=",">
						#stepStatusCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, stepStatus
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionConsultingTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'init' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'continuing' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'ending' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'monitoring1' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'monitoring2' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.action_consulting_type actionConsultingType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.action_consulting_type IN
	      ]]>
	               <iterate property="actionConsultingTypeCbx" open="(" close=")" conjunction=",">
						#actionConsultingTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionConsultingType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionConsultingType WHEN 'init' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'continuing' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'ending' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'monitoring1' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.actionConsultingType WHEN 'monitoring2' THEN wc.counselCnt END),0) counselCnt5
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.action_consulting_type actionConsultingType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.action_consulting_type IN
	      ]]>
	               <iterate property="actionConsultingTypeCbx" open="(" close=")" conjunction=",">
						#actionConsultingTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionConsultingType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionReceivedTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'tel' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'email' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'sms' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.action_received_type actionReceivedType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.action_received_type IN
	      ]]>
	               <iterate property="actionReceivedTypeCbx" open="(" close=")" conjunction=",">
						#actionReceivedTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionReceivedType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionReceivedType WHEN 'tel' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'email' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'sms' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionReceivedType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.action_received_type actionReceivedType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.action_received_type IN
	      ]]>
	               <iterate property="actionReceivedTypeCbx" open="(" close=")" conjunction=",">
						#actionReceivedTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionReceivedType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionClientGenderList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.client_gender clientGender,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.client_gender IN
	      ]]>
	               <iterate property="clientGenderCbx" open="(" close=")" conjunction=",">
						#clientGenderCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientGender
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.clientGender WHEN 'female' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'male' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientGender WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt3
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.client_gender clientGender,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.client_gender IN
	      ]]>
	               <iterate property="clientGenderCbx" open="(" close=")" conjunction=",">
						#clientGenderCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientGender
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionClientVictimRelTypeList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'me' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'agent' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'relmanager' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.client_victim_rel_type clientVictimRelType,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.client_victim_rel_type IN
	      ]]>
	               <iterate property="clientVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#clientVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientVictimRelType
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'me' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'agent' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'relmanager' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.clientVictimRelType WHEN 'etc' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.client_victim_rel_type clientVictimRelType,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.client_victim_rel_type IN
	      ]]>
	               <iterate property="clientVictimRelTypeCbx" open="(" close=")" conjunction=",">
						#clientVictimRelTypeCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, clientVictimRelType
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getOrgAccidentStepList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'before_declaration' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'after_declaration' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'investigation' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'review' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'punishment' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'followup' THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'etc' THEN wc.counselCnt END),0) counselCnt7,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt8
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.org_accident_step orgAccidentStep,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.org_accident_step IN
	      ]]>
	               <iterate property="orgAccidentStepCbx" open="(" close=")" conjunction=",">
						#orgAccidentStepCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, orgAccidentStep
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'before_declaration' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'after_declaration' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'investigation' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'review' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'punishment' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'followup' THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'etc' THEN wc.counselCnt END),0) counselCnt7,
        			IFNULL(SUM(CASE wc.orgAccidentStep WHEN 'unknown' THEN wc.counselCnt END),0) counselCnt8
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.org_accident_step orgAccidentStep,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.org_accident_step IN
	      ]]>
	               <iterate property="orgAccidentStepCbx" open="(" close=")" conjunction=",">
						#orgAccidentStepCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, orgAccidentStep
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionTypeOtherOrgList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgMin WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgCivilCriminal WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgRights WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.action_type_other_org_min actionTypeOtherOrgMin,
	            	   wcam.action_type_other_org_civil_criminal actionTypeOtherOrgCivilCriminal,
	            	   wcam.action_type_other_org_rights actionTypeOtherOrgRights,
	            	   wcam.action_type_other_org_etc actionTypeOtherOrgEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	               <isNotEmpty prepend="AND" property="actionTypeOtherOrgCbx">
	               <iterate property="actionTypeOtherOrgCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="actionTypeOtherOrgCbx[]" compareValue="min">
							wcam.action_type_other_org_min = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="civil_criminal">
							wcam.action_type_other_org_civil_criminal = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="rights">
							wcam.action_type_other_org_rights = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="etc">
							wcam.action_type_other_org_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeOtherOrgMin, actionTypeOtherOrgCivilCriminal, actionTypeOtherOrgRights, actionTypeOtherOrgEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionTypeOtherOrgMin WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgCivilCriminal WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgRights WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeOtherOrgEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.action_type_other_org_min actionTypeOtherOrgMin,
	            	   wcam.action_type_other_org_civil_criminal actionTypeOtherOrgCivilCriminal,
	            	   wcam.action_type_other_org_rights actionTypeOtherOrgRights,
	            	   wcam.action_type_other_org_etc actionTypeOtherOrgEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	               <isNotEmpty prepend="AND" property="actionTypeOtherOrgCbx">
	               <iterate property="actionTypeOtherOrgCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="actionTypeOtherOrgCbx[]" compareValue="min">
							wcam.action_type_other_org_min = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="civil_criminal">
							wcam.action_type_other_org_civil_criminal = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="rights">
							wcam.action_type_other_org_rights = 'Y'
						</isEqual>
						<isEqual property="actionTypeOtherOrgCbx[]" compareValue="etc">
							wcam.action_type_other_org_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeOtherOrgMin, actionTypeOtherOrgCivilCriminal, actionTypeOtherOrgRights, actionTypeOtherOrgEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionTypeServiceRelList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelConsulting WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelLawMin WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelMedic WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.action_type_servie_rel_consulting actionTypeServiceRelConsulting,
	            	   wcam.action_type_servie_rel_law_min actionTypeServiceRelLawMin,
	            	   wcam.action_type_servie_rel_medic actionTypeServiceRelMedic,
	            	   wcam.action_type_servie_rel_etc actionTypeServiceRelEtc,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	      ]]>
	               <isNotEmpty prepend="AND" property="actionTypeServiceRelCbx">
	               <iterate property="actionTypeServiceRelCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="actionTypeServiceRelCbx[]" compareValue="consulting">
							wcam.action_type_servie_rel_consulting = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="law_min">
							wcam.action_type_servie_rel_law_min = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="medic">
							wcam.action_type_servie_rel_medic = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="etc">
							wcam.action_type_servie_rel_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeServiceRelConsulting, actionTypeServiceRelLawMin, actionTypeServiceRelMedic, actionTypeServiceRelEtc
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionTypeServiceRelConsulting WHEN 'Y' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelLawMin WHEN 'Y' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelMedic WHEN 'Y' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeServiceRelEtc WHEN 'Y' THEN wc.counselCnt END),0) counselCnt4
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.action_type_servie_rel_consulting actionTypeServiceRelConsulting,
	            	   wcam.action_type_servie_rel_law_min actionTypeServiceRelLawMin,
	            	   wcam.action_type_servie_rel_medic actionTypeServiceRelMedic,
	            	   wcam.action_type_servie_rel_etc actionTypeServiceRelEtc,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	      ]]>
	               <isNotEmpty prepend="AND" property="actionTypeServiceRelCbx">
	               <iterate property="actionTypeServiceRelCbx" open="(" close=")" conjunction="OR">
	               		<isEqual property="actionTypeServiceRelCbx[]" compareValue="consulting">
							wcam.action_type_servie_rel_consulting = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="law_min">
							wcam.action_type_servie_rel_law_min = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="medic">
							wcam.action_type_servie_rel_medic = 'Y'
						</isEqual>
						<isEqual property="actionTypeServiceRelCbx[]" compareValue="etc">
							wcam.action_type_servie_rel_etc = 'Y'
						</isEqual>
					</iterate>
					</isNotEmpty>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeServiceRelConsulting, actionTypeServiceRelLawMin, actionTypeServiceRelMedic, actionTypeServiceRelEtc
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
	<select id="statisticsDAO.getActionTypeContList" parameterClass="ZStatisticsMngVo" resultClass="ZStatisticsMngVo">
        <isEqual property="range" compareValue="d">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'coun' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'act' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'con' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'move' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'cancel' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'giveup' THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'etc' THEN wc.counselCnt END),0) counselCnt7
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') regDate,
	            	   wcam.action_type_cont actionTypeCont,
	            	   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m-%d') BETWEEN #sdate# AND #edate#
	               AND wcam.action_type_cont IN
	      ]]>
	               <iterate property="actionTypeContCbx" open="(" close=")" conjunction=",">
						#actionTypeContCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeCont
	           ) wc
	          GROUP BY wc.regDate
	      ]]>
	     </isEqual>
	     <isEqual property="range" compareValue="m">
        <![CDATA[
        	SELECT 
        			wc.regDate,
        	 		IFNULL(SUM(CASE wc.actionTypeCont WHEN 'coun' THEN wc.counselCnt END),0) counselCnt1,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'act' THEN wc.counselCnt END),0) counselCnt2,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'con' THEN wc.counselCnt END),0) counselCnt3,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'move' THEN wc.counselCnt END),0) counselCnt4,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'cancel' THEN wc.counselCnt END),0) counselCnt5,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'giveup' THEN wc.counselCnt END),0) counselCnt6,
        			IFNULL(SUM(CASE wc.actionTypeCont WHEN 'etc' THEN wc.counselCnt END),0) counselCnt7
	           FROM ( 
	            SELECT 
	            	   DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') regDate,
	            	   wcam.action_type_cont actionTypeCont,
	 				   COUNT(*) counselCnt
				  FROM w_consulting_action_master wcam,
				  	   w_consulting_application_master wcam2
	             WHERE wcam.consulting_action_no = wcam2.consulting_application_no
	               AND wcam.delete_yn = 'N'
	               AND DATE_FORMAT(wcam.action_consulting_date_from, '%Y-%m') BETWEEN DATE_FORMAT(#sdate#, '%Y-%m') AND DATE_FORMAT(#edate#, '%Y-%m')
	               AND wcam.action_type_cont IN
	      ]]>
	               <iterate property="actionTypeContCbx" open="(" close=")" conjunction=",">
						#actionTypeContCbx[]#
					</iterate>
		<![CDATA[
	           	 GROUP BY regDate, actionTypeCont
	           ) wc
	          GROUP BY regDate
	      ]]>
	     </isEqual>
	</select>
	
</sqlMap>