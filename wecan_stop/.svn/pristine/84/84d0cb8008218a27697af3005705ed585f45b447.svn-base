package com.z5.zcms.admsys.orgculturedigmng.web;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.z5.zcms.admsys.administration.domain.PressRelVo;
import com.z5.zcms.admsys.administration.service.WAdministrationService;
import com.z5.zcms.admsys.common.domain.EditHistoryVo;
import com.z5.zcms.admsys.common.domain.FileInfoVo;
import com.z5.zcms.admsys.common.service.CommonFileService;
import com.z5.zcms.admsys.common.service.CommonService;
import com.z5.zcms.admsys.orgculturedigmng.domain.AppActionMergeVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.CommInfoVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.ConInfoRelActionVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.ManagerListVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.WCounselorVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.WOrgCultureDigMngVo;
import com.z5.zcms.admsys.orgculturedigmng.domain.WOrganizationVo;
import com.z5.zcms.admsys.orgculturedigmng.service.WOrgCultureDigMngService;
import com.z5.zcms.frontsys.front.domain.FrontApplicationVo;
import com.z5.zcms.frontsys.front.domain.GovInfoVo;
import com.z5.zcms.frontsys.front.service.FrontApplicationService;
import com.z5.zcms.util.ConvertUtils;
import com.z5.zcms.util.DataTable;
import com.z5.zcms.util.ExcelUtil;
import com.z5.zcms.util.SecuritySessionUtil;
import com.z5.zcms.util.Validator;

import egovframework.com.cmm.service.EgovProperties;

@RequestMapping("/admsys/orgculturedigmng/")
@Controller
public class WOrgCultureDigMngController {

	private Logger log = Logger.getLogger(this.getClass());

	@Autowired
	private WOrgCultureDigMngService wOrgCultureDigMngService;

	@Autowired
	private CommonService commonService;

	@Autowired
	private CommonFileService commonFileService;

	@Autowired
	private WAdministrationService wAdministrationService;
	
	@Autowired
	private FrontApplicationService frontApplicationService;

	/**
	 * 담당관지정 및 접수 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/index.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "index.html", method = {RequestMethod.POST,RequestMethod.GET})
	public String index(@ModelAttribute("FrontApplicationVo") FrontApplicationVo reqVo, Model model, HttpServletRequest req, HttpSession session, @RequestParam(value="dashNO", required=false) Integer dashNO) throws Exception {
		
    	DataTable input = new DataTable(req);
        reqVo.setStep_status(1);
        
        if ( dashNO != null ) {
        	model.addAttribute("dashNO", dashNO);
        }

    	try{
    		frontApplicationService.retrieveApplicationList(reqVo, input, model);
    		
    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		return "/zcms/admsys/orgculturedigmng/index";
	}
	
	
	/**
	 * 담당관지정 및 접수 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/index_excel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "index_excel.html", method = {RequestMethod.POST,RequestMethod.GET})
	@ResponseBody
	public FrontApplicationVo index_excel(@ModelAttribute("FrontApplicationVo") FrontApplicationVo reqVo, Model model, HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception {

		FrontApplicationVo retVo = new FrontApplicationVo();
		
		String retStatus = "FAIL";
        
    	try{
    		  reqVo.setStep_status(1);

    	    List<FrontApplicationVo> list =	frontApplicationService.excelList(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "Application"+sDate2.format(new Date())+".xls";
    		
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);

    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
    	
    	retVo.setRetStatus(retStatus);
    	
    	return retVo;
    	
	}
	
	
	/**
	 * 담당관지정 및 접수 컨트롤러 -> 담당관 선택 팝업
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/managerListPopup.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "managerListPopup.html")
	public String managerListPopup(@ModelAttribute("FrontApplicationVo") FrontApplicationVo reqVo, Model model, HttpServletRequest req, HttpSession session) throws Exception {
		
    	try{
    		// managrList
    		List<ManagerListVo> ml = new ArrayList<ManagerListVo>();
    		ml = wOrgCultureDigMngService.managerList();
    		model.addAttribute("list",ml);
    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		return "/zcms/admsys/orgculturedigmng/managerListPopup";
	}

	/**
	 * 담당관지정 및 접수 컨트롤러 -> 접수 상세 화면
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/index_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "index_view.html")
	public String index_view(@ModelAttribute("FrontApplicationVo") FrontApplicationVo reqVo, 
			Model model, HttpServletRequest req, HttpSession session) throws Exception {
		
    	try{
    		//
    		FrontApplicationVo data = frontApplicationService.applicationView(reqVo);
    		
    		model.addAttribute("data", data);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		return "/zcms/admsys/orgculturedigmng/index_info_form";
	}
	
	/**
	 * 담당관 진단 관리 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng.html", method = {RequestMethod.POST,RequestMethod.GET})
	public String picdigmng(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model,
			HttpServletRequest req, @RequestParam(value="dashNO", required=false) Integer dashNO) throws Exception {

		DataTable input = new DataTable(req);

		String userId = SecuritySessionUtil.getUserid(req);
		reqVo.setLoginUserId(userId);

		String retUrl = "";
		
	      if ( dashNO != null ) {
	        	model.addAttribute("dashNO", dashNO);
	        }

		if (StringUtils.isNotBlank(reqVo.getMode()) && StringUtils.equalsIgnoreCase(reqVo.getMode(), "POP")) {
			reqVo.setBbsType("A");
			retUrl = "/zcms/admsys/administration/linkActionPopup";
		} else {
			reqVo.setBbsType("P");
			retUrl = "/zcms/admsys/orgculturedigmng/picdigmng";
		}
		model.addAttribute("data", reqVo);
		try {
			wOrgCultureDigMngService.index(reqVo, input, model);
			
		} catch ( Exception e) {
			e.printStackTrace();
		}

		return retUrl;
	}
	
	
	/**
	 * 담당관지정 및 접수 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_excel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_excel.html", method = {RequestMethod.POST,RequestMethod.GET})
	@ResponseBody
	public AppActionMergeVo picdigmng_excel(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model, HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception {
		
		AppActionMergeVo retVo = new AppActionMergeVo();
		
		String retStatus = "FAIL";
		
		try{
			String userId = SecuritySessionUtil.getUserid(req);
			reqVo.setLoginUserId(userId);
			reqVo.setBbsType("P");
    	    List<AppActionMergeVo> list =	wOrgCultureDigMngService.indexExcel(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "Manager_"+sDate2.format(new Date())+".xls";
    		
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);
    		
    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		retVo.setRetStatus(retStatus);
    	
    	return retVo;
	}

	/**
	 * 담당관 진단 관리 등록 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_registration_form.html")
	public String picdigmng_registration_form(ModelMap model) throws Exception {
		model.addAttribute("mode", "reg");
		Map<String, Object> defValue = new HashMap<String, Object>();
		defValue.put("NO", -1);

		// 위원 목록
		/*
		 * WCounselorVo c = new WCounselorVo(); c.setM(0); c.setN(99999);
		 * List<WCounselorVo> cList = wOrgCultureDigMngService.getCommList(c);
		 * model.addAttribute("cList", cList);
		 */

		model.addAttribute("data", defValue);

		// managrList
		List<ManagerListVo> ml = new ArrayList<ManagerListVo>();
		ml = wOrgCultureDigMngService.managerList();
		model.addAttribute("ml", ml);

		return "/zcms/admsys/orgculturedigmng/picdigmng_info_form";
	}

	/**
	 * 담당관 진단 관리 데이터 등록 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_registration.html")
	@ResponseBody
	public AppActionMergeVo picdigmng_registration(@RequestBody Map<String, Object> mapVo, ModelMap model,
			HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		AppActionMergeVo ret = new AppActionMergeVo();

		//
		ObjectMapper mapper = new ObjectMapper();
		mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
		AppActionMergeVo tempVo = mapper.convertValue(mapVo, AppActionMergeVo.class);
		//

		String userId = SecuritySessionUtil.getUserid(req);

		AppActionMergeVo reqVo = new AppActionMergeVo();
		BeanUtils.copyProperties(reqVo, tempVo);
		
		FrontApplicationVo appVo = new FrontApplicationVo();
		BeanUtils.copyProperties(appVo, tempVo);

		reqVo.setCreate_user(userId);
		reqVo.setManager(userId);

		try {
			List<String> tmL = reqVo.getManagerList();

			if (tmL.size() == 1) {
				if (!StringUtils.equalsIgnoreCase(tmL.get(0), userId)) {
					reqVo.setManager(tmL.get(0));
				}
			} else if (tmL.size() > 1) {
				// 본인이 없다면 만들어주자.
				boolean selfExistCheck = false;
				for (int i = 0; i < tmL.size(); i++) {
					if (StringUtils.equalsIgnoreCase(tmL.get(i), userId)) {
						selfExistCheck = true;
						break;
					}
				}
				if (!selfExistCheck) {
					reqVo.getManagerList().add(tmL.size(), userId);
				}
			}
    		//신청서 등록
			reqVo.setStep_status(5);// 심사대기?
			reqVo.setConsulting_application_no(reqVo.getRegAcNo());
    		int applastInsertNo  = frontApplicationService.registrationApplication(reqVo);
    		ret.setNO(applastInsertNo);
    		FrontApplicationVo tempApp = frontApplicationService.applicationView(ret);
    		for ( int i = 0; i < 5; i++ ) {
    			FrontApplicationVo tempNo5 = new FrontApplicationVo();
    			tempNo5.setConsulting_application_no(tempApp.getConsulting_application_no());
    			tempNo5.setStep_status(i+1);
    			tempNo5.setCreate_user(userId);
    			wOrgCultureDigMngService.registrationAppHistory(tempNo5);	
    		}
			
    		if(StringUtils.isEmpty(reqVo.getRegistration_strtime())) {
    			reqVo.setRegistration_strtime("00:00:00");
    		}
    		
    		if(StringUtils.isEmpty(reqVo.getRegistration_endtime())) {
    			reqVo.setRegistration_endtime("00:00:00");
    		}
    		
    		//조치일지 등록
    		reqVo.setConsulting_action_no(tempApp.getConsulting_application_no());
			int lastInsertNo = wOrgCultureDigMngService.registration(reqVo);
			ret.setActionNO(lastInsertNo);

			AppActionMergeVo temp = wOrgCultureDigMngService.view(ret);
			ret.setConsulting_action_no(temp.getConsulting_action_no());

			reqVo.setConsulting_action_no(temp.getConsulting_action_no());
			reqVo.setCreate_user(userId);
			
			// 상담 등록
			if ( reqVo.getConsultingNoList().size() > 0 ) {
				wOrgCultureDigMngService.insertRelAcWithCon(reqVo);
			}
			
			// comissioner insert
			List<CommInfoVo> cL = new ArrayList<CommInfoVo>();
			cL = reqVo.getCmmList();
			if ( cL.size() > 0 ) {
				wOrgCultureDigMngService.insertRelComissioner(reqVo);
			}

			// manager insert
			if (tmL.size() > 0) {
				reqVo.setCon_ac_type("ac");
				wOrgCultureDigMngService.insertRelManager(reqVo);
			}

			// press
			if (reqVo.getPressList().size() > 0) {
				PressRelVo t = new PressRelVo();
				t.setCon_ac_type("ac");
				t.setCon_ac_no(lastInsertNo + "");
				t.setPressNoList(reqVo.getPressList());
				t.setCreate_user(userId);

				wAdministrationService.registrationConAcWithPressNo(t);
			}

			// file
			if (reqVo.getFileList().size() > 0) {
				for (int i = 0; i < reqVo.getFileList().size(); i++) {
					int tempNO = Integer.valueOf(reqVo.getFileList().get(i));
					FileInfoVo tv = new FileInfoVo();
					tv.setUpdate_user(userId);
					tv.setMenu_cate("ac");
					tv.setMenu_no(lastInsertNo);
					tv.setFile_seq(i + 1);
					tv.setNO(tempNO);

					commonFileService.updateFileInfo(tv);
				}
			}

			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("view");

		return ret;
	}
	
	/**
	 * 담당관 진단 관리 접수 및 담당관 지정 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_receipt_registration.html")
	@ResponseBody
	public AppActionMergeVo picdigmng_receipt_registration(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		AppActionMergeVo ret = new AppActionMergeVo();

		//
		//ObjectMapper mapper = new ObjectMapper();
		//mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
		//AppActionMergeVo tempVo = mapper.convertValue(mapVo, AppActionMergeVo.class);
		//

		String userId = SecuritySessionUtil.getUserid(req);

		//AppActionMergeVo reqVo = new AppActionMergeVo();
		//BeanUtils.copyProperties(reqVo, tempVo);

		reqVo.setCreate_user(userId);
		try {
			List<String> tmL = reqVo.getManagerList();

			if (tmL.size() > 0 && tmL != null ) {				
				reqVo.setManager(tmL.get(0));
			}
			
			int lastInsertNo = wOrgCultureDigMngService.registration(reqVo);
			ret.setActionNO(lastInsertNo);

			AppActionMergeVo temp = wOrgCultureDigMngService.view(ret);
			ret.setConsulting_action_no(temp.getConsulting_action_no());

			reqVo.setConsulting_action_no(temp.getConsulting_action_no());
			reqVo.setCreate_user(userId);

			// manager insert
			if (tmL.size() > 0 && tmL != null ) {				
				reqVo.setCon_ac_type("ac");
				wOrgCultureDigMngService.insertRelManager(reqVo);
			}
			
			//application 접수->접수 완료로 변경
			FrontApplicationVo vo = new FrontApplicationVo();
			vo.setUpdate_user(userId);
			vo.setStep_status(3);
			vo.setConsulting_application_no(reqVo.getConsulting_action_no());
			wOrgCultureDigMngService.applicationStepChange(vo);

			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("view");

		return ret;
	}	
	
	/**
	 * 담당관 진단 관리 상세 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_view.html")
	public String picdigmng_view(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		try {
			AppActionMergeVo view = null;
			//대시보드에서 왔는지 목록에서 클릭했는지 구분
			
			//대시보드
			if ( reqVo.getActionNO() <= 0 ) {
				FrontApplicationVo viewApp = frontApplicationService.applicationView(reqVo);
				if ( viewApp != null ) {
					reqVo.setActionNO(0);
					reqVo.setConsulting_action_no(viewApp.getConsulting_application_no());
				}
				
				view = wOrgCultureDigMngService.view(reqVo);
				reqVo.setActionNO(view.getActionNO());
				if ( viewApp != null ) {
					BeanUtils.copyProperties(view, viewApp);
				}	
				
			} else {
				view = wOrgCultureDigMngService.view(reqVo);
				reqVo.setConsulting_application_no(reqVo.getConsulting_action_no());
				FrontApplicationVo viewApp = frontApplicationService.applicationView(reqVo);
				if ( viewApp != null ) {
					BeanUtils.copyProperties(view, viewApp);
				}	
			}

			// 수정 이력 목록
			EditHistoryVo ehVo = new EditHistoryVo();
			ehVo.setConsulting_action_no(reqVo.getConsulting_action_no());
			List<EditHistoryVo> historyList = commonService.retrieveEditHistory(ehVo);
			model.addAttribute("data", view);
			model.addAttribute("historyList", historyList);

			// 첨부 파일 목록
			FileInfoVo fileVo = new FileInfoVo();
			fileVo.setMenu_no(reqVo.getActionNO());
			fileVo.setMenu_cate("ac");
			List<FileInfoVo> fileList = commonFileService.retrieveFilListByMenuNo(fileVo);
			model.addAttribute("fileList", fileList);

			// 연관 언론 모니터링 목록
			PressRelVo vo = new PressRelVo();
			vo.setCon_ac_no(reqVo.getActionNO() + "");
			vo.setCon_ac_type("ac");
			List<PressRelVo> relAcList = wAdministrationService.retrievePressRelListByConAcNo(vo);
			model.addAttribute("acList", relAcList);

			// 위원 목록
			List<CommInfoVo> cList = wOrgCultureDigMngService.retrieveCommissionoerList(view.getConsulting_action_no());
			model.addAttribute("cList", cList);

			// 저장된 담당관 목록
			List<ManagerListVo> sml = wOrgCultureDigMngService
					.retrieveManagerListByConsultIngActionNO(view.getConsulting_action_no());
			model.addAttribute("sml", sml);

			// managrList
			List<ManagerListVo> ml = wOrgCultureDigMngService.managerList();
			model.addAttribute("ml", ml);
			
			// 상담 목록
			List<ConInfoRelActionVo> conList= wOrgCultureDigMngService.retrieveRelConList(view.getConsulting_action_no());
			model.addAttribute("conList", conList);

		} catch (Exception e) {
			log.error(e);
		}

		model.addAttribute("mode", "view");

		return "/zcms/admsys/orgculturedigmng/picdigmng_info_form";
	}
	
	/**
	 * 담당관 진단 관리 상세 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_view_pop.html")
	public String picdigmng_view_pop(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		try {
			AppActionMergeVo view = null;
			//대시보드에서 왔는지 목록에서 클릭했는지 구분
			
			//대시보드
			if ( reqVo.getActionNO() <= 0 ) {
				FrontApplicationVo viewApp = frontApplicationService.applicationView(reqVo);
				if ( viewApp != null ) {
					reqVo.setActionNO(0);
					reqVo.setConsulting_action_no(viewApp.getConsulting_application_no());
				}
				
				view = wOrgCultureDigMngService.view(reqVo);
				reqVo.setActionNO(view.getActionNO());
				if ( viewApp != null ) {
					BeanUtils.copyProperties(view, viewApp);
				}	
				
			} else {
				view = wOrgCultureDigMngService.view(reqVo);
				reqVo.setConsulting_application_no(reqVo.getConsulting_action_no());
				FrontApplicationVo viewApp = frontApplicationService.applicationView(reqVo);
				if ( viewApp != null ) {
					BeanUtils.copyProperties(view, viewApp);
				}	
			}

			// 수정 이력 목록
			EditHistoryVo ehVo = new EditHistoryVo();
			ehVo.setConsulting_action_no(reqVo.getConsulting_action_no());
			List<EditHistoryVo> historyList = commonService.retrieveEditHistory(ehVo);
			model.addAttribute("data", view);
			model.addAttribute("historyList", historyList);

			// 첨부 파일 목록
			FileInfoVo fileVo = new FileInfoVo();
			fileVo.setMenu_no(reqVo.getActionNO());
			fileVo.setMenu_cate("ac");
			List<FileInfoVo> fileList = commonFileService.retrieveFilListByMenuNo(fileVo);
			model.addAttribute("fileList", fileList);

			// 연관 언론 모니터링 목록
			PressRelVo vo = new PressRelVo();
			vo.setCon_ac_no(reqVo.getActionNO() + "");
			vo.setCon_ac_type("ac");
			List<PressRelVo> relAcList = wAdministrationService.retrievePressRelListByConAcNo(vo);
			model.addAttribute("acList", relAcList);

			// 위원 목록
			List<CommInfoVo> cList = wOrgCultureDigMngService.retrieveCommissionoerList(view.getConsulting_action_no());
			model.addAttribute("cList", cList);

			// 저장된 담당관 목록
			List<ManagerListVo> sml = wOrgCultureDigMngService
					.retrieveManagerListByConsultIngActionNO(view.getConsulting_action_no());
			model.addAttribute("sml", sml);

			// managrList
			List<ManagerListVo> ml = wOrgCultureDigMngService.managerList();
			model.addAttribute("ml", ml);
			
			// 상담 목록
			List<ConInfoRelActionVo> conList= wOrgCultureDigMngService.retrieveRelConList(view.getConsulting_action_no());
			model.addAttribute("conList", conList);

		} catch (Exception e) {
			log.error(e);
		}

		model.addAttribute("mode", "view");

		return "/zcms/admsys/orgculturedigmng/picdigmng_info_form_popup";
	}

	/**
	 * 담당관 진단 관리 수정 컨트롤러
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_update.html")
	@ResponseBody
	//public AppActionMergeVo picdigmng_update(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo,
	public AppActionMergeVo picdigmng_update(@RequestBody Map<String, Object> mapVo,
			ModelMap model, HttpServletRequest req) throws Exception {

		String retVal = "FAIL";
		AppActionMergeVo ret = new AppActionMergeVo();
		
		//
		String tNo = mapVo.get("actionNO").toString();
		int iNo = 0;
		if ( StringUtils.isNotBlank(tNo) ) {
			iNo = Integer.parseInt(tNo);
		}
		ObjectMapper mapper = new ObjectMapper();
		mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
		AppActionMergeVo tempVo = mapper.convertValue(mapVo, AppActionMergeVo.class);
		//
		tempVo.setActionNO(iNo);
		String userId = SecuritySessionUtil.getUserid(req);
		
		AppActionMergeVo reqVo = new AppActionMergeVo();
		BeanUtils.copyProperties(reqVo, tempVo);
		
		reqVo.setUpdate_user(userId);

		try {
			List<String> tmL = reqVo.getManagerList();

			if (tmL.size() == 1) {
				if (!StringUtils.equalsIgnoreCase(tmL.get(0), userId)) {
					reqVo.setManager(tmL.get(0));
				}
			} else if (tmL.size() > 1) {
				// 본인이 없다면 만들어주자.
				boolean selfExistCheck = false;
				for (int i = 0; i < tmL.size(); i++) {
					if (StringUtils.equalsIgnoreCase(tmL.get(i), userId)) {
						selfExistCheck = true;
						break;
					}
				}
				if (!selfExistCheck) {
					reqVo.getManagerList().add(tmL.size(), userId);
				}
			}
    		
			if(StringUtils.isEmpty(reqVo.getRegistration_strtime())) {
    			reqVo.setRegistration_strtime("00:00:00");
    		}
    		
    		if(StringUtils.isEmpty(reqVo.getRegistration_endtime())) {
    			reqVo.setRegistration_endtime("00:00:00");
    		}
    		
			//조치 일지 수정
			wOrgCultureDigMngService.actionUpdate(reqVo);

			reqVo.setConsulting_action_no(reqVo.getConsulting_action_no());
			reqVo.setCreate_user(userId);

			
			//접수 수정
			//접수 수정전 현재 DB진행상태와 들어온 진행상태 값 비교 값 보고 업데이트 성공후 이력 쌓기.
			boolean suc = false;
			reqVo.setConsulting_application_no(reqVo.getConsulting_action_no());
			boolean dupCheck=false;
			try {
				dupCheck= wOrgCultureDigMngService.checkCurStat(reqVo);	
				frontApplicationService.editApplicationInfo(reqVo);
				suc = true;
			} catch ( Exception e ) {
				e.printStackTrace();
			}
			
			if ( suc & dupCheck ) {
				// 이력 쌓기					
				wOrgCultureDigMngService.registrationAppHistory(reqVo);
			}

			// 연결된 상담 수정
			wOrgCultureDigMngService.deleteRelConsultingByConsultingActionNO(reqVo.getConsulting_action_no());
			if ( reqVo.getConsultingNoList().size() > 0 ) {
				wOrgCultureDigMngService.insertRelAcWithCon(reqVo);
			}

			// 위원 수정
			wOrgCultureDigMngService.deleteRelCommissionerByConsultingActionNO(reqVo.getConsulting_action_no());
			if ( reqVo.getCmmList().size() > 0 ) {
				wOrgCultureDigMngService.insertRelComissioner(reqVo);
			}
			
			// manager insert
			wOrgCultureDigMngService.deleteRelManagerByConsultingActionNO(reqVo.getConsulting_action_no());
			if (reqVo.getManagerList().size() > 0) {
				reqVo.setCon_ac_type("ac");
				wOrgCultureDigMngService.insertRelManager(reqVo);
			}

			// 수정 이력
			EditHistoryVo ehVo = new EditHistoryVo();
			ehVo.setCreate_user(userId);
			ehVo.setConsulting_action_no(reqVo.getConsulting_action_no());
			ehVo.setEdit_contents(reqVo.getEdit_reason());
			commonService.registrationEditHistory(ehVo);

			// press
			wAdministrationService.deletePressRelByConAcNo(reqVo.getActionNO());
			if (reqVo.getPressList().size() > 0) {
				PressRelVo t = new PressRelVo();
				t.setCon_ac_type("ac");
				t.setCon_ac_no(reqVo.getActionNO() + "");
				t.setPressNoList(reqVo.getPressList());
				t.setCreate_user(userId);

				wAdministrationService.registrationConAcWithPressNo(t);
			}

			// file
			FileInfoVo tc = new FileInfoVo();
			tc.setMenu_cate("ac");
			tc.setMenu_no(reqVo.getNO());
			int fseq = commonFileService.retrieveFileCountByNO(tc);
			if (reqVo.getFileList().size() > 0) {
				for (int i = 0; i < reqVo.getFileList().size(); i++) {
					int tempNO = Integer.valueOf(reqVo.getFileList().get(i));
					FileInfoVo tv = new FileInfoVo();
					tv.setUpdate_user(userId);
					tv.setMenu_cate("ac");
					tv.setMenu_no(reqVo.getNO());
					tv.setFile_seq((fseq) + (i + 1));
					tv.setNO(tempNO);

					commonFileService.updateFileInfo(tv);
				}
			}

			retVal = "SUCCESS";
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("edit");

		return ret;
	}

	/**
	 * 담당관 진단 관리 삭제 컨트롤러 실제 삭제는 아니며, delete_yn = 'Q' 로 요청, 추후 마리아 이벤트에서 정해진 기간에
	 * delete_yn = 'Q'로 되어 있는걸 일괄 삭제한다.
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	@RequestMapping(value = "picdigmng_req_delete.html")
	@ResponseBody
	public AppActionMergeVo picdigmng_req_delete(AppActionMergeVo reqVo, ModelMap model, HttpServletRequest req)
			throws Exception {
		String retVal = "FAIL";
		AppActionMergeVo ret = new AppActionMergeVo();

		String userId = SecuritySessionUtil.getUserid(req);
		reqVo.setDelete_user(userId);

		try {
			wOrgCultureDigMngService.deleteRequestByTeacher(reqVo);
			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("delete");

		return ret;
	}

	/**
	 * 담당관 상담관리 삭제 팝업 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/deleteAlramPop.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgculturedigmng_del_alram.html", method = RequestMethod.GET)
	public String orgculturedigmng_del_alram(
			@RequestParam(value = "consulting_action_no", defaultValue = "-") String consulting_action_no,
			ModelMap model) throws Exception {
		model.addAttribute("consulting_action_no", consulting_action_no);
		return "/zcms/admsys/orgculturedigmng/deleteAlramPop";
	}
	
	
	/**
	 * 담당관 진단 관리 상세 기관 검색 팝업
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/govSearchPop.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "govSearchPop.html", method = RequestMethod.GET)
	public String govSearchPop(	@RequestParam(value = "g_type", defaultValue = "gov") String g_type, ModelMap model) throws Exception {
		model.addAttribute("g_type", g_type);
		return "/zcms/admsys/orgculturedigmng/govSearchPopup";
	}
	

	/**
	 * 전체 진단 조회 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/alldigsrch.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "alldigsrch.html")
	public String alldigsrch(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model,
			HttpServletRequest req) throws Exception {

		DataTable input = new DataTable(req);

		reqVo.setBbsType("A");

		wOrgCultureDigMngService.index(reqVo, input, model);

		String retUrl = "";

		model.addAttribute("data", reqVo);
		
		if (StringUtils.isNotBlank(reqVo.getMode()) && StringUtils.equalsIgnoreCase(reqVo.getMode(), "POP")) {
			retUrl = "/zcms/admsys/administration/linkActionPopup";
		} else {
			retUrl = "/zcms/admsys/orgculturedigmng/alldigsrch";
		}

		return retUrl;
	}
	
	/**
	 * 전체 진단 조회 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/alldigsrchExcel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "alldigsrchExcel.html")
	@ResponseBody
	public AppActionMergeVo alldigsrchExcel(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model,
			HttpServletRequest req) throws Exception {
		
		AppActionMergeVo retVo = new AppActionMergeVo();
		
		String retStatus = "FAIL";
		
		try{
			reqVo.setBbsType("A");
    	    List<AppActionMergeVo> list =	wOrgCultureDigMngService.indexExcel(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "AllAction_"+sDate2.format(new Date())+".xls";
    		
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);
    		
    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		retVo.setRetStatus(retStatus);
    	
    	return retVo;
	}

	/**
	 * 전체 일정 관리 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/allschedmng.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "allschedmng.html")
	public String allschedmng(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model,
			HttpServletRequest req) throws Exception {
		
		DataTable input = new DataTable(req);
		
		wOrgCultureDigMngService.secheduleIndex(reqVo, input, model);
		
		model.addAttribute("data", reqVo);
		
		return "/zcms/admsys/orgculturedigmng/allschedmng";
	}

	/**
	 * 조치일지 삭제함 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/allhisdel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "allhisdel.html")
	public String allhisdel(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model,
			HttpServletRequest req) throws Exception {

		DataTable input = new DataTable(req);

		wOrgCultureDigMngService.delIndex(reqVo, input, model);

		return "/zcms/admsys/orgculturedigmng/allhisdel";
	}

	/**
	 * 조치일지 삭제함 영구삭제 컨트롤러
	 *
	 * @param model
	 * @return WOrganizationVo
	 * @throws Exception
	 */
	@RequestMapping(value = "allhisdel_req_delPermanent.html")
	@ResponseBody
	public WOrganizationVo allhisdel_req_delPermanent(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo,
			Model model, HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		WOrganizationVo ret = new WOrganizationVo();
		try {
			wOrgCultureDigMngService.delPermanent(reqVo);

			retVal = "SUCCESS";
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("delete");

		return ret;
	}

	/**
	 * 조치일지 삭제함 복원 컨트롤러
	 *
	 * @param model
	 * @return WOrganizationVo
	 * @throws Exception
	 */
	@RequestMapping(value = "allhisdel_req_updDelYn.html")
	@ResponseBody
	public WOrganizationVo allhisdel_req_updDelYn(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo,
			Model model, HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		WOrganizationVo ret = new WOrganizationVo();
		String userId = SecuritySessionUtil.getUserid(req);
		reqVo.setUpdate_user(userId);

		try {
			wOrgCultureDigMngService.updDelYn(reqVo);

			retVal = "SUCCESS";
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("update");

		return ret;
	}
	
	/**
	 * 조치일지 삭제함 엑셀 다운로드
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/allhisdel_excel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "allhisdel_excel.html", method = {RequestMethod.POST,RequestMethod.GET})
	@ResponseBody
	public AppActionMergeVo allhisdel_excel(@ModelAttribute("AppActionMergeVo") AppActionMergeVo reqVo, Model model, HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception {
		
		AppActionMergeVo retVo = new AppActionMergeVo();
		
		String retStatus = "FAIL";
		
		try{
    	    List<AppActionMergeVo> list =	wOrgCultureDigMngService.delIndexExcel(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "allhisdel_"+sDate2.format(new Date())+".xls";
    		
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);
    		
    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		retVo.setRetStatus(retStatus);
    	
    	return retVo;
	}
	

	/**
	 * 기관 관리 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/orgmng.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng.html")
	public String orgmng(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, Model model, HttpServletRequest req)
			throws Exception {

		try {
			DataTable input = new DataTable(req);
			wOrgCultureDigMngService.orgIndex(reqVo, input, model);

		} catch (Exception e) {
			log.error(e);
		}

		return "/zcms/admsys/orgculturedigmng/orgmng";
	}

	/**
	 * 기관 관리 사용/미사용 처리 컨트롤러
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_req_updUse.html")
	@ResponseBody
	public WOrganizationVo orgmng_req_updUse(WOrganizationVo reqVo, ModelMap model, HttpServletRequest req)
			throws Exception {
		String retVal = "FAIL";
		WOrganizationVo ret = new WOrganizationVo();
		try {
			String userId = SecuritySessionUtil.getUserid(req);
			for (String upd : reqVo.getUpdList()) {
				String[] updArray = upd.split("/");
				String useYn = updArray[1];
				reqVo = new WOrganizationVo();
				reqVo.setOrganizationId(updArray[0]);
				if ("Y".equals(useYn)) {
					reqVo.setUseYn("N");
				} else {
					reqVo.setUseYn("Y");
				}
				reqVo.setUpdId(userId);
				wOrgCultureDigMngService.orgUpdUse(reqVo);
			}
			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("update");

		return ret;
	}

	/**
	 * 기관 관리 등록 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/orgmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_registration_form.html")
	public String orgmng_info_form(ModelMap model) throws Exception {
		model.addAttribute("mode", "reg");
		return "/zcms/admsys/orgculturedigmng/orgmng_info_form";
	}

	/**
	 * 기관 관리 데이터 등록 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/orgmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_registration.html")
	@ResponseBody
	public WCounselorVo orgmng_registration(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		WCounselorVo ret = new WCounselorVo();
		try {
			String userId = SecuritySessionUtil.getUserid(req);

			//LocalDate now = LocalDate.now();
			//int year = now.getYear();

			String organizationId = wOrgCultureDigMngService.getOrgIdSeq();

			reqVo.setOrganizationId(organizationId);
			//reqVo.setOrganizationTelnum(reqVo.getOrganizationTelnum().replaceAll("-", ""));
			reqVo.setRegId(userId);
			wOrgCultureDigMngService.orgRegistration(reqVo);
			
			if ( reqVo.getOrg_type().equalsIgnoreCase("priv") ) {
				
				WOrganizationVo t = wOrgCultureDigMngService.orgView(reqVo);
				
				GovInfoVo vo = new GovInfoVo();				
				vo.setOrg_code(t.getOrganizationCode());
				vo.setOrg_name(t.getOrganizationName());
				vo.setExists_yn("1");
				wOrgCultureDigMngService.privOrgRegistration(vo);
			}
			
			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("view");

		return ret;
	}

	/**
	 * 기관 관리 상세 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/orgmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_view.html")
	public String orgmng_view(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		try {
			WOrganizationVo view = wOrgCultureDigMngService.orgView(reqVo);
			model.addAttribute("data", view);

		} catch (Exception e) {
			log.error(e);
		}

		model.addAttribute("mode", "view");

		return "/zcms/admsys/orgculturedigmng/orgmng_info_form";
	}

	/**
	 * 기관관리 엑셀 다운로드
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/orgmng_excel.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_excel.html", method = {RequestMethod.POST,RequestMethod.GET})
	@ResponseBody
	public WOrganizationVo orgmng_excel(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, Model model, HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception {
		
		WOrganizationVo retVo = new WOrganizationVo();
		
		String retStatus = "FAIL";
		
		try{
    	    List<WOrganizationVo> list =	wOrgCultureDigMngService.orgIndexExcel(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "orgmng_"+sDate2.format(new Date())+".xls";
    		
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);
    		
    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);

    	}catch(Exception e){
    		e.printStackTrace();
    	}
		
		retVo.setRetStatus(retStatus);
    	
    	return retVo;
	}
	
	/**
	 * 담당관 진단 관리 수정 컨트롤러
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	@RequestMapping(value = "orgmng_update.html")
	@ResponseBody
	public WOrganizationVo orgmng_update(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		String retVal = "FAIL";
		WOrganizationVo ret = new WOrganizationVo();

		try {
			String userId = SecuritySessionUtil.getUserid(req);

			reqVo.setOrganizationTelnum(reqVo.getOrganizationTelnum().replaceAll("-", ""));
			reqVo.setUpdId(userId);

			WOrganizationVo t = wOrgCultureDigMngService.orgView(reqVo);
			
			if ( t.getOrg_type().equalsIgnoreCase("gov") ) {
				//1. 공공이였다가, 민간으로 업데이트 하면...
				if ( reqVo.getOrg_type().equalsIgnoreCase("priv") ) {
					String newSeq = wOrgCultureDigMngService.getOrgPrivSeq();
					
					GovInfoVo vo = new GovInfoVo();				
					vo.setOrg_code(newSeq);
					vo.setOrg_name(reqVo.getOrganizationName());
					vo.setExists_yn("1");
					wOrgCultureDigMngService.privOrgRegistration(vo);
					
					reqVo.setOrganizationCode(newSeq);
				}
				//2. 민간 이였다가, 공공으로 업데이트 하면

			}
			

			
			wOrgCultureDigMngService.orgUpdate(reqVo);

			retVal = "SUCCESS";
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("edit");

		return ret;
	}

	/**
	 * 기관 관리 엑셀다운로드 컨트롤러
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	/*
	 * @RequestMapping(value = "orgmng_req_excel.html")
	 * 
	 * @ResponseBody public WOrganizationVo orgmng_req_excel(WOrganizationVo reqVo ,
	 * ModelMap model, HttpServletRequest req) throws Exception { String
	 * retVal="FAIL"; WOrganizationVo ret = new WOrganizationVo(); try { String
	 * filepath = ""; String sheetName = reqVo.getSheetName();
	 * 
	 * createExcelToFile(List<Map<String, Object>> datas, filepath, sheetName);
	 * retVal="SUCCESS";
	 * 
	 * } catch ( Exception e) { e.printStackTrace(); log.error(e); }
	 * 
	 * ret.setRetStatus(retVal); ret.setMode("update");
	 * 
	 * return ret; }
	 */

	/**
	 * 위원 관리 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/commmng.html"
	 * @throws Exception
	 */

	@RequestMapping(value = "commmng.html")
	public String commmng(@ModelAttribute("zCounselorVo") WCounselorVo reqVo, Model model, HttpServletRequest req)
			throws Exception {
		DataTable input = new DataTable(req);

		wOrgCultureDigMngService.commIndex(reqVo, input, model);

		String retUrl = "";

		if (StringUtils.isNotBlank(reqVo.getMode()) && StringUtils.equalsIgnoreCase(reqVo.getMode(), "POP")) {
			retUrl = "/zcms/admsys/orgculturedigmng/linkCommissionerPopup";
		} else {
			retUrl = "/zcms/admsys/orgculturedigmng/commmng";
		}

		return retUrl;
	}
	
	/**
	 * 위원 관리 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/commmng.html"
	 * @throws Exception
	 */

	@RequestMapping(value = "commmng_excel.html")
	@ResponseBody
	public WCounselorVo commmng_excel(@ModelAttribute("zCounselorVo") WCounselorVo reqVo, Model model, HttpServletRequest req)
			throws Exception {
		WCounselorVo retVo = new WCounselorVo();
		
		String retStatus = "FAIL";
		
		try {
    		List<WCounselorVo> list =wOrgCultureDigMngService.commIndexExcel(reqVo);
    		
    		List<Map<String, Object>> datas = ConvertUtils.convertToMaps(list);
    		
    		SimpleDateFormat sDate2 = new SimpleDateFormat("yyyyMMddhhmmss");
    		String excelName = "Comm_"+sDate2.format(new Date())+".xls";
        	
    		ExcelUtil eu = new ExcelUtil();
    		String ePath = Validator.path(EgovProperties.getPathProperty("Globals.excel.file.location"));
    		eu.createExcelToFile(datas, ePath+excelName, excelName);
    		
    		retStatus = "SUCCESS";

    		retVo.setExcelName(excelName);
    		
    	} catch ( Exception e ) {
    		e.printStackTrace();
    	}
    	
    	retVo.setRetStatus(retStatus);

		return retVo;
	}
	
	@RequestMapping(value = "commmngPop.html", method = {RequestMethod.POST,RequestMethod.GET})
	public String commmngPop(@ModelAttribute("zCounselorVo") WCounselorVo reqVo, Model model, HttpServletRequest req)
			throws Exception {
		DataTable input = new DataTable(req);
		
		try {
			wOrgCultureDigMngService.linkPopIndex(reqVo, input, model);			
		} catch ( Exception e ) {
			e.printStackTrace();
		}

		String retUrl = "";
		
		if ( StringUtils.isNotBlank( input.get("cn","") ) ) {
			model.addAttribute("mode", "cnView");	
		}
		
		retUrl = "/zcms/admsys/orgculturedigmng/linkCommissionerPopup";

		return retUrl;
	}

	/**
	 * 위원 관리 등록 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/commmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "commmng_registration_form.html")
	public String commmng_registration_form(ModelMap model) throws Exception {
		Map<String, Object> defValue = new HashMap<String, Object>();
		defValue.put("NO", -1);

		model.addAttribute("data", defValue);
		model.addAttribute("mode", "reg");
		return "/zcms/admsys/orgculturedigmng/commmng_info_form";
	}

	/**
	 * 위원 관리 데이터 등록 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/commmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "commmng_registration.html")
	@ResponseBody
	public WCounselorVo commmng_registration(@ModelAttribute("WCounselorVo") WCounselorVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {
		String retVal = "FAIL";
		WCounselorVo ret = new WCounselorVo();
		String userId = SecuritySessionUtil.getUserid(req);
		reqVo.setRegUser(userId);

		try {
			wOrgCultureDigMngService.commRegistration(reqVo);
			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("view");

		return ret;
	}

	/**
	 * 위원 관리 상세 view 컨트롤러
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/picdigmng_info_form.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "commmng_view.html")
	public String commmng_view(@ModelAttribute("WCounselorVo") WCounselorVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		try {
			WCounselorVo view = wOrgCultureDigMngService.commView(reqVo);

			model.addAttribute("data", view);

		} catch (Exception e) {
			log.error(e);
		}

		model.addAttribute("mode", "view");

		return "/zcms/admsys/orgculturedigmng/commmng_info_form";
	}

	/**
	 * 위원 관리 수정 컨트롤러
	 *
	 * @param model
	 * @return WCounselorVo
	 * @throws Exception
	 */
	@RequestMapping(value = "commmng_update.html")
	@ResponseBody
	public WCounselorVo picdigmng_update(@ModelAttribute("WCounselorVo") WCounselorVo reqVo, ModelMap model,
			HttpServletRequest req) throws Exception {

		String retVal = "FAIL";
		WCounselorVo ret = new WCounselorVo();

		String userId = SecuritySessionUtil.getUserid(req);
		reqVo.setRegUser(userId);

		try {
			wOrgCultureDigMngService.commUpdate(reqVo);

			retVal = "SUCCESS";
		} catch (Exception e) {
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("edit");

		return ret;
	}

	/**
	 * 위원 관리 삭제 컨트롤러 실제 삭제는 아니며, delete_yn = 'Q' 로 요청, 추후 마리아 이벤트에서 정해진 기간에
	 * delete_yn = 'Q'로 되어 있는걸 일괄 삭제한다.
	 *
	 * @param model
	 * @return AppActionMergeVo
	 * @throws Exception
	 */
	@RequestMapping(value = "commmng_req_delete.html")
	@ResponseBody
	public WCounselorVo picdigmng_req_delete(WCounselorVo reqVo, ModelMap model, HttpServletRequest req)
			throws Exception {
		String retVal = "FAIL";
		WCounselorVo ret = new WCounselorVo();

		//String userId = SecuritySessionUtil.getUserid(req);

		try {
			wOrgCultureDigMngService.commDelete(reqVo);
			retVal = "SUCCESS";

		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
		}

		ret.setRetStatus(retVal);
		ret.setMode("delete");

		return ret;
	}


    /**
     * 구)컨설팅기록 컨트롤러
     *
     * @param model
     * @return "/zcms/admsys/administration/oldcltrslt.html"
     * @throws Exception
     */
    @RequestMapping(value = "oldcltrslt.html")
    public String oldcltrslt(ModelMap model) throws Exception {
        return "/zcms/admsys/orgculturedigmng/oldcltrslt";
    }

	/**
	 * 기관ID 검색 팝업
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/govIdSearchPop.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "govIdSearchPop.html", method = RequestMethod.GET)
	public String govIdSearchPop(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, ModelMap model) throws Exception {
	
		List<WOrganizationVo> gList = wOrgCultureDigMngService.srchGovIdList(reqVo);
		model.addAttribute("list", gList);
		
		return "/zcms/admsys/orgculturedigmng/govIdSearchPopup";
	}
	
	/**
	 * 진단일지 검색 팝업
	 *
	 * @param model
	 * @return "/zcms/admsys/orgculturedigmng/consultingSearchPop.html"
	 * @throws Exception
	 */
	@RequestMapping(value = "consultingSearchPop.html", method = RequestMethod.GET)
	public String consultingSearchPop(@ModelAttribute("WOrgCultureDigMngVo") WOrgCultureDigMngVo reqVo, ModelMap model) throws Exception {
	
		List<WOrgCultureDigMngVo> consultingList = wOrgCultureDigMngService.srchConsultingList(reqVo);
		model.addAttribute("list", consultingList);
		
		return "/zcms/admsys/orgculturedigmng/consultingSearchPopup";
	}
	
	/**
	 * 기관ID 검색
	 *
	 * @param WOrganizationVo
	 * @return map
	 * @throws Exception
	 */
	@RequestMapping(value="srchGovIdList.html", method=RequestMethod.POST)
	@ResponseBody
    public Map<String,Object> srchGovIdList(@ModelAttribute("WOrganizationVo") WOrganizationVo reqVo, Model model, HttpServletRequest req, HttpSession session) throws Exception{
    	
    	Map<String,Object> map = new HashMap<String,Object>();
    	
    	String retStatus = "FAIL";
    	
    	try{
    		List<WOrganizationVo> gList = wOrgCultureDigMngService.srchGovIdList(reqVo);
    		map.put("gList", gList);
    		retStatus = "SUCCESS";
    	}catch(Exception e){
    		e.printStackTrace();
    	}
    	
    	map.put("resultCode", retStatus);
    	
    	return map;
    }
	
	/**
	 * 기관ID 검색
	 *
	 * @param WOrganizationVo
	 * @return map
	 * @throws Exception
	 */
	@RequestMapping(value="srchConsultingList.html", method=RequestMethod.POST)
	@ResponseBody
    public Map<String,Object> srchConsultingList(@ModelAttribute("WOrgCultureDigMngVo") WOrgCultureDigMngVo reqVo, Model model, HttpServletRequest req, HttpSession session) throws Exception{
    	
    	Map<String,Object> map = new HashMap<String,Object>();
    	
    	String retStatus = "FAIL";
    	
    	try{
    		List<WOrgCultureDigMngVo> consultingList = wOrgCultureDigMngService.srchConsultingList(reqVo);
    		map.put("consultingList", consultingList);
    		retStatus = "SUCCESS";
    	}catch(Exception e){
    		e.printStackTrace();
    	}
    	
    	map.put("resultCode", retStatus);
    	
    	return map;
    }
	
	
}
