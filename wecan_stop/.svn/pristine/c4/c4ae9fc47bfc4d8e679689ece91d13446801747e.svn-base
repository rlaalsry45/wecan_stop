package com.z5.zcms.admsys.ftp;

import com.z5.zcms.util.Browser;
import com.z5.zcms.util.FileUtil;
import com.z5.zcms.util.Validator;
import com.z5.zcms.util.ZPrint;
import egovframework.com.cmm.service.EgovFileMngUtil;
import egovframework.com.cmm.service.EgovProperties;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.File;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Iterator;

import static com.z5.zcms.util.ZPrint.enter;

@Controller
@RequestMapping("/admsys/ftp/")
public class FtpController {

    private Logger log = Logger.getLogger(this.getClass());

    @RequestMapping(value = "index.html", method = RequestMethod.GET)
    public String ftp(Model model, HttpServletRequest request, HttpSession session) {
        try {
            String            repo = EgovProperties.getProperty("Globals.ftp");
            ArrayList<String> list = FileUtil.subDirList(EgovProperties.getPathProperty("Globals.ftp"));
            model.addAttribute("list", list);
            model.addAttribute("repo", repo);
        } catch (Exception e) {
            log.error(e.getMessage());
            e.printStackTrace();
        }
        return "/zcms/admsys/ftp/index";
    }

    @RequestMapping(value = "upload.html", method = RequestMethod.POST)
    public String ftpPost(Model model, HttpServletRequest request, HttpSession session) {
        enter(request);
        try {
            if (request instanceof MultipartHttpServletRequest) {
                MultipartHttpServletRequest multi = (MultipartHttpServletRequest) request;
                Iterator<String>            names = multi.getFileNames();
                while (names.hasNext()) {
                    String getFilename = names.next();
                    //첨부파일일 경우에만 가져온다.
                    MultipartFile mFile = multi.getFile(getFilename);
                    if (mFile.getSize() > 0) {
                        EgovFileMngUtil.writeUploadedFile(mFile, mFile.getOriginalFilename(), EgovProperties.getPathProperty("Globals.ftp"));
                    }
                }
            }
        } catch (Exception e) {
            log.error(e.getMessage());
            e.printStackTrace();
        }

        return "redirect:/admsys/ftp/index.html";
    }

    @RequestMapping(value = "record.html", method = RequestMethod.GET)
    public @ResponseBody
    ArrayList<String> record() {
        enter();
        ArrayList<String> files = FileUtil.subDirList(EgovProperties.getPathProperty("Globals.ftp"));
        ZPrint.print("ftp", files);
        return files;
    }

    @RequestMapping(value = "attach.html", method = RequestMethod.POST)
    public @ResponseBody
    ArrayList<FtpContext> attach(@RequestParam("file") MultipartFile file) {
        ZPrint.enter(file.getOriginalFilename());
        EgovFileMngUtil.writeUploadedFile(file, file.getOriginalFilename(), EgovProperties.getPathProperty("Globals.ftp"));

        ArrayList<FtpContext> contexts = new ArrayList<FtpContext>();
        FtpContext context = new FtpContext(
                file.getOriginalFilename(),
                Long.valueOf(file.getSize()).intValue(),
                EgovProperties.getProperty("Globals.ftp") + file.getOriginalFilename());

        contexts.add(context);
        return contexts;
    }

    @RequestMapping(value = "detach.html", method = RequestMethod.GET)
    public @ResponseBody
    Boolean detach(@RequestParam("file") String file) {
        ZPrint.enter(file);
        String path = Validator.path(EgovProperties.getPathProperty("Globals.ftp") + System.getProperty("file.separator") + file);
        FileUtil.deleteFile(path);
        return true;
    }

    @RequestMapping(value = "download.html", method = RequestMethod.GET)
    public void download(HttpServletRequest request, HttpServletResponse response) {
        try {
            String name = URLDecoder.decode(request.getParameter("file"), "UTF-8");
            String path = Validator.path(EgovProperties.getPathProperty("Globals.ftp") + System.getProperty("file.separator") + name);
            Browser.download(request, response, path, name);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
