<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"  xmlns:mvc="http://www.springframework.org/schema/mvc"  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
	<context:component-scan base-package="egovframework, com.z5.zcms">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
		<context:exclude-filter expression="org.springframework.stereotype.Service" type="annotation"/>
		<context:exclude-filter expression="org.springframework.stereotype.Repository" type="annotation"/>
	</context:component-scan>

	<mvc:annotation-driven validator="validator" content-negotiation-manager="contentNegotiationManager"/>
	
	<context:annotation-config/>
		
	<!-- For Pagination Tag -->
	<bean class="egovframework.com.cmm.ImagePaginationRenderer" id="imageRenderer"/>

	<bean class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager" id="paginationManager">
		<property name="rendererType">
			<map>
				<entry key="image" value-ref="imageRenderer"/>
			</map>
		</property>
	</bean>

	<!--
		- The form-based controllers within this application provide @RequestMapping
		- annotations at the type level for path mapping URLs and @RequestMapping
		- at the method level for request type mappings (e.g., GET and POST).
		- In contrast, ClinicController - which is not form-based - provides
		- @RequestMapping only at the method level for path mapping URLs.
		-
		- DefaultAnnotationHandlerMapping is driven by these annotations and is
		- enabled by default with Java 5+.
	-->

	<!--
		- This bean processes annotated handler methods, applying Application-specific PropertyEditors
		- for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
	-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="egovframework.com.cmm.web.EgovBindingInitializer"/>
		</property>
		<property name="customArgumentResolvers">
			<list>
				<bean class="egovframework.rte.ptl.mvc.bind.CommandMapArgumentResolver"/>
			</list>
		</property>
	</bean>
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean" p:favorPathExtension="false"/>

	<!-- 로그인 체크가 필요한 URL과 로그인 여부를 체크해줄 인터셉터를 등록한다. -->
	<!--
	<bean id="selectAnnotaionMapper" class="egovframework.rte.ptl.mvc.handler.SimpleUrlAnnotationHandlerMapping" p:order="1">
		<property name="interceptors">
			<list>
				<ref local="authenticInterceptor" />
			</list>
		</property>
		-->
		<!-- 로그인 체크가 필요한 URL 리스트  -->
		<!--
		<property name="urls">
			<set>
				<value>/**/*.do</value>
			</set>
		</property>
	</bean>
	-->

	<!-- 로그인 체크 인터셉터 -->
	<!-- <bean id="authenticInterceptor" class="egovframework.com.cmm.interceptor.AuthenticInterceptor"> -->
	<!-- 인증 체크가 필요 없는 URL 리스트  -->
	<!--
		<property name="permittedURL">
			<set>
				<value>/uat/uia/[a-zA-Z]+\.do</value>
				<value>/EgovLeft.do</value>
				<value>/uat/uia/actionLogin.do</value>
			</set>
		</property>
	</bean>
	-->

	<!--
		- This bean resolves specific types of exceptions to corresponding logical
		- view names for zerror views. The default behaviour of DispatcherServlet
		- is to propagate all exceptions to the servlet container: this will happen
		- here with all other types of exceptions.
	-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="egovframework/com/cmm/error/egovError"/>
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">egovframework/com/cmm/error/dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">egovframework/com/cmm/error/dataAccessFailure</prop>
				<prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">egovframework/com/cmm/error/egovBizException</prop>
				<prop key="org.springframework.web.HttpSessionRequiredException">egovframework/com/uat/uia/EgovLoginUsr</prop>
			</props>
		</property>
	</bean>
    <!-- MULTIPART RESOLVERS -->
    <!-- regular spring resolver -->
    <bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1073741824" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxInMemorySize" value="1073741824" />
    </bean>

    <!-- custom multi file resolver -->
    <bean id="local.MultiCommonsMultipartResolver" class="egovframework.com.cmm.web.EgovMultipartResolver">
        <property name="maxUploadSize" value="1073741824" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxInMemorySize" value="1073741824" />
    </bean>

    <!-- choose one from above and alias it to the name Spring expects -->
    <!-- alias name="local.MultiCommonsMultipartResolver" alias="multipartResolver" /-->
    <alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver" />

	<!--
		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "vets"
		- will be mapped to "/WEB-INF/jsp/vets.jsp".
	-->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
	
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.JstlView"/>
    
    <!-- Configuring interceptors based on URI -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/admsys/**"/>
			<bean class="com.z5.zcms.interceptor.AdmsysMenuPermissionInterceptor"></bean>
		</mvc:interceptor>	
		<mvc:interceptor>
			<mvc:mapping path="/admsys/board/**"/>
			<bean class="com.z5.zcms.interceptor.BoardAdminAuthInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/skin/board/**"/>
			<bean class="com.z5.zcms.interceptor.BoardFrontAuthInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- Device Resolution -->
	<mvc:interceptors>
		<bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
	</mvc:interceptors>
</beans>
